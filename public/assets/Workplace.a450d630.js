import{z as a,D as e,cv as t,a as s,d as l,r as n,s as r,k as c,E as d,o,c as i,e as p,g as u,w as m,t as x,x as f,G as y,F as w,h as v,cw as g,bi as h}from"./index.f2e05143.js";import{E as k,a as _}from"./el-col.ae597e62.js";import{E as j}from"./el-skeleton-item.16ba91c5.js";import{E as $}from"./el-card.76af1dc0.js";import{E as b}from"./el-divider.1a444038.js";import{E}from"./el-link.318be66c.js";import{_ as O}from"./CountTo.e9692931.js";import{_ as C}from"./Echart.386b11ca.js";import{r as z}from"./echarts-data.3efde13e.js";import{_ as D}from"./Highlight.vue_vue_type_script_lang.b0c48bf7.js";import{u as M}from"./useAxios.5e836160.js";import"./typescript2.0e462989.js";import"./debounce.9184f38e.js";const N={"zh-CN":{justNow:"刚刚",past:a=>a.match(/\d/)?`${a}前`:a,future:a=>a.match(/\d/)?`${a}后`:a,month:(a,e)=>1===a?e?"上个月":"下个月":`${a} 个月`,year:(a,e)=>1===a?e?"去年":"明年":`${a} 年`,day:(a,e)=>1===a?e?"昨天":"明天":`${a} 天`,week:(a,e)=>1===a?e?"上周":"下周":`${a} 周`,hour:a=>`${a} 小时`,minute:a=>`${a} 分钟`,second:a=>`${a} 秒`},en:{justNow:"刚刚",past:a=>a.match(/\d/)?`${a} ago`:a,future:a=>a.match(/\d/)?`in ${a}`:a,month:(a,e)=>1===a?e?"last month":"next month":`${a} month${a>1?"s":""}`,year:(a,e)=>1===a?e?"last year":"next year":`${a} year${a>1?"s":""}`,day:(a,e)=>1===a?e?"yesterday":"tomorrow":`${a} day${a>1?"s":""}`,week:(a,e)=>1===a?e?"last week":"next week":`${a} week${a>1?"s":""}`,hour:a=>`${a} hour${a>1?"s":""}`,minute:a=>`${a} minute${a>1?"s":""}`,second:a=>`${a} second${a>1?"s":""}`}},A=l=>{const n=a(),r=e((()=>n.getCurrentLocale));return t(l,{messages:N[s(r).lang]})},F=M(),G={class:"flex items-center"},H=p("img",{src:"/assets/avatar.afc48ead.jpg",alt:"",class:"w-70px h-70px rounded-[50%] mr-20px"},null,-1),I={class:"text-20px text-700"},L={class:"mt-10px text-14px text-gray-500"},P={class:"flex h-70px items-center justify-end <sm:mt-20px"},T={class:"px-8px text-right"},W={class:"text-14px text-gray-400 mb-20px"},q={class:"px-8px text-right"},B={class:"text-14px text-gray-400 mb-20px"},J={class:"px-8px text-right"},K={class:"text-14px text-gray-400 mb-20px"},Q={class:"flex justify-between"},R={class:"flex items-center"},S={class:"text-16px"},U={class:"mt-15px text-14px text-gray-400"},V={class:"mt-20px text-12px text-gray-400 flex justify-between"},X={class:"flex justify-between"},Y={class:"flex items-center"},Z=p("img",{src:"/assets/avatar.afc48ead.jpg",alt:"",class:"w-35px h-35px rounded-[50%] mr-20px"},null,-1),aa={class:"text-14px"},ea={class:"mt-15px text-12px text-gray-400"},ta={class:"flex items-center"},sa=l({__name:"Workplace",setup(a){const e=n(!0);let t=r({project:0,access:0,todo:0});const l=async()=>{const a=await(async()=>{const a=await F.get({url:"/workplace/total"});return a&&a.data})().catch((()=>{}));a&&(t=Object.assign(t,a.data))};let M=r([]);const N=async()=>{const a=await(async()=>{const a=await F.get({url:"/workplace/project"});return a&&a.data})().catch((()=>{}));a&&(M=Object.assign(M,a.data))};let sa=r([]);const la=async()=>{const a=await(async()=>{const a=await F.get({url:"/workplace/dynamic"});return a&&a.data})().catch((()=>{}));a&&(sa=Object.assign(sa,a.data))};let na=r([]);const ra=async()=>{const a=await(async()=>{const a=await F.get({url:"/workplace/team"});return a&&a.data})().catch((()=>{}));a&&(na=Object.assign(na,a.data))};let ca=r(z);const da=async()=>{const a=await(async()=>{const a=await F.get({url:"/workplace/radar"});return a&&a.data})().catch((()=>{}));a&&(h(ca,"radar.indicator",a.data.map((a=>({name:oa(a.name),max:a.max})))),h(ca,"series",[{name:`xxx${oa("workplace.index")}`,type:"radar",data:[{value:a.data.map((a=>a.personal)),name:oa("workplace.personal")},{value:a.data.map((a=>a.team)),name:oa("workplace.team")}]}]))};(async()=>{await Promise.all([l(),N(),la(),ra(),da()]),e.value=!1})();const{t:oa}=c();return(a,l)=>{const n=d("Icon");return o(),i(y,null,[p("div",null,[u(s($),{shadow:"never"},{default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[u(s(k),{gutter:20,justify:"space-between"},{default:m((()=>[u(s(_),{xl:12,lg:12,md:12,sm:24,xs:24},{default:m((()=>[p("div",G,[H,p("div",null,[p("div",I,x(s(oa)("workplace.goodMorning"))+"，Archer，"+x(s(oa)("workplace.happyDay")),1),p("div",L,x(s(oa)("workplace.toady"))+"，20℃ - 32℃！ ",1)])])])),_:1}),u(s(_),{xl:12,lg:12,md:12,sm:24,xs:24},{default:m((()=>[p("div",P,[p("div",T,[p("div",W,x(s(oa)("workplace.project")),1),u(s(O),{class:"text-20px","start-val":0,"end-val":s(t).project,duration:2600},null,8,["end-val"])]),u(s(b),{direction:"vertical"}),p("div",q,[p("div",B,x(s(oa)("workplace.toDo")),1),u(s(O),{class:"text-20px","start-val":0,"end-val":s(t).todo,duration:2600},null,8,["end-val"])]),u(s(b),{direction:"vertical","border-style":"dashed"}),p("div",J,[p("div",K,x(s(oa)("workplace.access")),1),u(s(O),{class:"text-20px","start-val":0,"end-val":s(t).access,duration:2600},null,8,["end-val"])])])])),_:1})])),_:1})])),_:1},8,["loading"])])),_:1})]),u(s(k),{class:"mt-20px",gutter:20,justify:"space-between"},{default:m((()=>[u(s(_),{xl:16,lg:16,md:24,sm:24,xs:24,class:"mb-20px"},{default:m((()=>[u(s($),{shadow:"never"},{header:m((()=>[p("div",Q,[p("span",null,x(s(oa)("workplace.project")),1),u(s(E),{type:"primary",underline:!1},{default:m((()=>[f(x(s(oa)("workplace.more")),1)])),_:1})])])),default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[u(s(k),null,{default:m((()=>[(o(!0),i(y,null,w(s(M),((a,e)=>(o(),v(s(_),{key:`card-${e}`,xl:8,lg:8,md:12,sm:24,xs:24},{default:m((()=>[u(s($),{shadow:"hover"},{default:m((()=>[p("div",R,[u(n,{icon:a.icon,size:25,class:"mr-10px"},null,8,["icon"]),p("span",S,x(a.name),1)]),p("div",U,x(s(oa)(a.message)),1),p("div",V,[p("span",null,x(a.personal),1),p("span",null,x(s(g)(a.time,"yyyy-MM-dd")),1)])])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1},8,["loading"])])),_:1}),u(s($),{shadow:"never",class:"mt-20px"},{header:m((()=>[p("div",X,[p("span",null,x(s(oa)("workplace.dynamic")),1),u(s(E),{type:"primary",underline:!1},{default:m((()=>[f(x(s(oa)("workplace.more")),1)])),_:1})])])),default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[(o(!0),i(y,null,w(s(sa),((a,e)=>(o(),i("div",{key:`dynamics-${e}`},[p("div",Y,[Z,p("div",null,[p("div",aa,[u(s(D),{keys:a.keys.map((a=>s(oa)(a)))},{default:m((()=>[f(x(s(oa)("workplace.pushCode")),1)])),_:2},1032,["keys"])]),p("div",ea,x(s(A)(a.time)),1)])]),u(s(b))])))),128))])),_:1},8,["loading"])])),_:1})])),_:1}),u(s(_),{xl:8,lg:8,md:24,sm:24,xs:24,class:"mb-20px"},{default:m((()=>[u(s($),{shadow:"never"},{header:m((()=>[p("span",null,x(s(oa)("workplace.shortcutOperation")),1)])),default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[(o(),i(y,null,w(9,(a=>u(s(_),{key:`card-${a}`,xl:12,lg:12,md:12,sm:24,xs:24,class:"mb-10px"},{default:m((()=>[u(s(E),{type:"default",underline:!1},{default:m((()=>[f(x(s(oa)("workplace.operation"))+x(a),1)])),_:2},1024)])),_:2},1024))),64))])),_:1},8,["loading"])])),_:1}),u(s($),{shadow:"never",class:"mt-20px"},{header:m((()=>[p("span",null,"xx"+x(s(oa)("workplace.index")),1)])),default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[u(s(C),{options:s(ca),height:400},null,8,["options"])])),_:1},8,["loading"])])),_:1}),u(s($),{shadow:"never",class:"mt-20px"},{header:m((()=>[p("span",null,x(s(oa)("workplace.team")),1)])),default:m((()=>[u(s(j),{loading:e.value,animated:""},{default:m((()=>[u(s(k),null,{default:m((()=>[(o(!0),i(y,null,w(s(na),(a=>(o(),v(s(_),{key:`team-${a.name}`,span:12,class:"mb-20px"},{default:m((()=>[p("div",ta,[u(n,{icon:a.icon,class:"mr-10px"},null,8,["icon"]),u(s(E),{type:"default",underline:!1},{default:m((()=>[f(x(a.name),1)])),_:2},1024)])])),_:2},1024)))),128))])),_:1})])),_:1},8,["loading"])])),_:1})])),_:1})])),_:1})],64)}}});export{sa as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
