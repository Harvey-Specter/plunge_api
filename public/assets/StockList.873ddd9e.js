import{_ as e}from"./ContentWrap.93253eae.js";import{_ as a}from"./SearchButton.80adad7b.js";import{_ as o}from"./Dialog.38c0a3d1.js";import{d as t,ch as s,bQ as r,q as l,r as n,s as c,aF as i,o as d,c as p,g as m,w as u,e as g,a as f,h,at as w,x as y,t as b,G as k,k as v,bS as j}from"./index.f2e05143.js";import{E as _}from"./el-button.c85984df.js";import{E as S}from"./el-tag.1d3a3f94.js";import{E as C}from"./el-message-box.1514d4cd.js";import"./el-input.2911c078.js";import"./el-overlay.df6b9408.js";import{_ as P}from"./Table.vue_vue_type_script_lang.35225308.js";import{u as R}from"./useAxios.5e836160.js";import{u as x}from"./useTable.1a1069ae.js";import z from"./Write.1654adbe.js";import I from"./Detail.29aca1b1.js";import{u as F}from"./useCrudSchemas.ab34991b.js";import{u as D}from"./useIcon.9cd4d07c.js";import"./el-card.76af1dc0.js";import"./el-popper.7090df9f.js";import"./index2.bac0fa94.js";import"./Form.9f3ad28e.js";import"./el-col.ae597e62.js";import"./typescript2.0e462989.js";import"./tsxHelper.2e29a15d.js";import"./index2.7bbd87c9.js";import"./event2.1741f333.js";import"./index2.309e467b.js";import"./scroll2.dc2faf83.js";import"./debounce.9184f38e.js";import"./validator2.6f1987ff.js";import"./el-input-number.de78a412.js";import"./el-switch.83e4e4db.js";import"./el-divider.1a444038.js";import"./InputPassword.9aadb9c3.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./Editor.b5873d10.js";import"./aria2.b5095a02.js";import"./browser2.761a8cbc.js";import"./useForm.2045d6ea.js";import"./refs2.9b43771e.js";import"./vnode2.65b846cb.js";import"./useValidator.61d7760c.js";import"./Descriptions.1ec68d5f.js";import"./index2.312fa1be.js";import"./tree.b6e955f9.js";const q=R(),B=async e=>{const a=await q.get({url:"/categories/"+e.id+"/stocks",params:e});return a&&a.data},A=async e=>{const a=e.toString(),o=await q.post({url:"/stocks/del",data:{ids:a}});return o&&o.data},N={class:"mb-10px float-left"},L=t({__name:"StockList",setup(t){const R=s();console.log("route.query========",R.query);let L=R.query.id;const E=R.query.userId,U=R.query.del,T=R.query.from,G=R.query.indId,V=R.query.size;L||(L=-1);let W=0;U&&(W=1),console.log("delFlag----",W);const H=r(),{wsCache:O}=l(),M=O.get(H.getUserInfo).id;console.log(M,"========",E);let Q=!0;E==M&&(Q=!1);const{register:J,tableObject:K,methods:X}=x({getListApi:B,delListApi:A,response:{list:"list",total:"total"}}),{getList:Y,setSearchParams:Z}=X;K.params.id=L,K.params.del=W,K.params.userId=M,K.params.from=T,K.params.indId=G,K.params.size=V,Y();const{t:$}=v(),ee=D({icon:"ant-design:plus-outlined"}),ae=D({icon:"icon-park-outline:stock-market"}),oe=D({icon:"ep:delete"});let te=D({icon:"bx:edit"});1==W&&(te=D({icon:"fa-solid:undo"}));const se=n(""),re=n([]),le=n(["#99A9BF","#F7BA2A","#FF9900"]),ne=c([{field:"code",label:$("stock.code"),type:"count",search:{show:!0},form:{componentProps:{readonly:!0,onChange:async e=>{const a=await(async e=>{const a=await q.get({url:"/stocks/getStockByCode",params:{code:e}});return a&&a.data})(e).catch((()=>{})).finally((()=>{be.value=!1}));a&&(ce=a.data,a.data.length>0&&(K.currentRow.cate33=a.data[0].cate33,K.currentRow.name=a.data[0].name,K.currentRow.size=a.data[0].size,K.currentRow.code=a.data[0].code))}},colProps:{span:12}},detail:{show:!1}},{field:"name",label:$("stock.name"),search:{show:!0},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}},detail:{span:12}},{field:"cate33",label:$("stock.industry"),search:{show:!1},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}}},{field:"size",label:$("stock.size"),table:{show:!0},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}}},{field:"pattern",table:{show:"industry"!=T},search:{show:!1,component:"Select",componentProps:{readonly:!1,options:[{label:$("stock.headShoulder"),value:"1"},{label:$("stock.getingChips"),value:"2"},{label:$("stock.stars"),value:"3"},{label:$("stock.gap"),value:"4"},{label:$("stock.others"),value:"5"}]}},label:$("stock.pattern"),formatter:(e,a,o)=>i(S,{type:"1"===o?"success":"2"===o?"warning":"3"===o?"danger":"4"===o?"info":""},(()=>$("1"===o?"stock.headShoulder":"2"===o?"stock.getingChips":"3"===o?"stock.stars":"4"===o?"stock.gap":"stock.others"))),form:{colProps:{span:12},component:"Select",componentProps:{disabled:!1,options:[{label:$("stock.headShoulder"),value:"1"},{label:$("stock.getingChips"),value:"2"},{label:$("stock.stars"),value:"3"},{label:$("stock.gap"),value:"4"},{label:$("stock.others"),value:"5"}]}}},{field:"score",type:"count",label:$("stock.rate"),search:{show:"industry"!=T,component:"Rate",componentProps:{onChange:e=>{console.log("score",e),K.params.score=e,Y()},readonly:Q,colors:le,size:"large"}},table:{show:"industry"!=T},formatter:(e,a,o)=>i(S,{type:0!==o&&o?1===o||2===o?"danger":3===o?"warning":4===o?"":"success":"info",effect:o?"dark":"light",round:!0},(()=>o)),form:{component:"Rate",componentProps:{readonly:Q,colors:le,size:"large"}}},{field:"created_at",label:$("stock.create_at"),table:{show:"industry"!=T},form:{show:!1}},{field:"category_ids",label:$("stock.save_as_block"),table:{show:!1},form:{colProps:{span:24},component:"CheckboxButton",value:[],componentProps:{options:[]}}},{field:"newCateName",label:$("stock.newGroup"),table:{show:!1},form:{show:!0,component:"Input",componentProps:{}}},{field:"cateName",label:$("stock.theGroup"),table:{show:1==W},form:{show:!1,component:"Input",componentProps:{}}},{field:"remark",label:$("group.remark"),table:{show:!1},form:{component:"Input",componentProps:{readonly:!1,type:"textarea",rows:7},colProps:{span:24}}},{field:"action",width:"260px",label:$("stock.action"),form:{show:!1},detail:{show:!1}}]);let ce=c([]);const ie=async()=>{const e=await(async e=>{const a=await q.get({url:"/categories/getCatesByUserId",params:{userId:e}});return a&&a.data})(M).catch((()=>{})).finally((()=>{be.value=!1}));if(e){ce=e.data;let a=[];for(let o=0;o<e.data.length;o++)a.push(e.data[o].value);re.value=a,ne.length>=8&&(ne[7].form.componentProps.options=ce)}};ie();const de=n([]),pe=async(e,a)=>{const o=await(async(e,a)=>{const o=await q.get({url:"/categories/getCatesByUserIdCode",params:{userId:e,code:a}});return o&&o.data})(e,a).catch((()=>{})).finally((()=>{be.value=!1}));if(o){ce=o.data;let e=[];for(let a=0;a<o.data.length;a++)e.push(o.data[a].value);de.value=e,K.currentRow.category_ids=de.value}},{allSchemas:me}=F(ne),ue=n(!1),ge=n(""),fe=n(!1),he=async(e,a,o)=>{var t;K.currentRow=e;const{delList:s,getSelections:r}=X,l=await r();a&&0==l.length?j.warning($("stock.pleaseDelRecode")):(fe.value=!0,1==o?C.confirm($("common.delMessage"),$("common.delWarning"),{confirmButtonText:$("common.delOk"),cancelButtonText:$("common.delCancel"),type:"warning"}).then((async()=>{var e;await(async e=>{const a=e.toString(),o=await q.post({url:"/stocks/rmf",data:{ids:a}});return o&&o.data})(a?l.map((e=>e.id)):[null==(e=K.currentRow)?void 0:e.id]).finally((()=>{fe.value=!1,Y()}))})):await s(a?l.map((e=>e.id)):[null==(t=K.currentRow)?void 0:t.id],a).finally((()=>{fe.value=!1,Y()})))},we=async(e,a)=>{var o;console.log("recData=========="),K.currentRow=e;const{getSelections:t}=X,s=await t();a&&0==s.length?j.warning($("stock.pleaseRecRecode")):(fe.value=!0,await(async e=>{const a=e.toString(),o=await q.post({url:"/stocks/rec",data:{ids:a}});return o&&o.data})(a?s.map((e=>e.id)):[null==(o=K.currentRow)?void 0:o.id]).finally((()=>{fe.value=!1,Y()})))},ye=n(),be=n(!1),ke=async()=>{var e;const a=f(ye);await(null==(e=null==a?void 0:a.elFormRef)?void 0:e.validate((async e=>{if(e){const e=await(null==a?void 0:a.getFormData());if(e.user_id=M,0==e.category_ids.length&&""==e.newCateName)return j.warning($("stock.msgGroupNull")),!1;e.category_id||(e.category_id=-1),console.log("stockSave====",e);const o=await(async e=>{const a=await q.post({url:"/stocks/saveStock",data:e});return a&&a.data})(e).catch((()=>{})).finally((()=>{be.value=!1}));o&&(ue.value=!1,Y())}})))};return(t,s)=>(d(),p(k,null,[m(f(e),null,{default:u((()=>[g("div",N,[1!=f(W)?(d(),h(f(_),{key:0,disabled:f(Q)||1==f(W),icon:f(ee),type:"primary",onClick:s[0]||(s[0]=e=>(ne.length>=1&&(ne[0].form.componentProps.readonly=!1),ge.value=$("exampleDemo.add"),se.value="edit",K.currentRow={id:NaN,name:"",cate33:"",code:"",user_id:M,category_id:+L,pattern:"",market:"",remark:"",created_at:"",category_ids:[+L],score:0,size:"",cateName:"",newCateName:""},void(ue.value=!0)))},null,8,["disabled","icon"])):w("",!0),1==f(W)?(d(),h(f(_),{key:1,icon:f(te),type:"primary",onClick:s[1]||(s[1]=e=>we(null,!0))},null,8,["icon"])):w("",!0),m(f(_),{disabled:f(Q)&&0==f(W),icon:f(oe),loading:fe.value,type:"danger",onClick:s[2]||(s[2]=e=>he(null,!0,f(W)))},null,8,["disabled","icon","loading"])]),m(f(a),{schema:f(me).searchSchema,onSearch:f(Z),onReset:f(Z)},null,8,["schema","onSearch","onReset"]),m(f(P),{pageSize:f(K).pageSize,"onUpdate:pageSize":s[3]||(s[3]=e=>f(K).pageSize=e),currentPage:f(K).currentPage,"onUpdate:currentPage":s[4]||(s[4]=e=>f(K).currentPage=e),columns:f(me).tableColumns,data:f(K).tableList,loading:f(K).loading,pagination:{total:f(K).total},onRegister:f(J)},{action:u((({row:e})=>[m(f(_),{icon:f(ae),type:"success",onClick:a=>(e=>{window.open("https://www.tradingview.com/chart/CFSEAW1L/?symbol=TSE%3A"+e.code,"_blank")})(e)},null,8,["icon","onClick"]),m(f(_),{icon:f(te),type:"primary",onClick:a=>(async(e,a)=>{console.log("action_delflag====",W),1==W?(console.log("now is in trash ; Do recover"),await we(e,!1),Y()):(ie(),ge.value=$("edit"===a?"exampleDemo.edit":"exampleDemo.detail"),se.value=a,ne.length>=1&&(ne[0].form.componentProps.readonly=!0),K.currentRow=e,pe(M,e.code),ue.value=!0)})(e,"edit")},null,8,["icon","onClick"]),m(f(_),{disabled:f(Q)&&0==f(W),icon:f(oe),type:"danger",onClick:a=>he(e,!1,f(W))},null,8,["disabled","icon","onClick"])])),_:1},8,["pageSize","currentPage","columns","data","loading","pagination","onRegister"])])),_:1}),m(f(o),{modelValue:ue.value,"onUpdate:modelValue":s[6]||(s[6]=e=>ue.value=e),title:ge.value,maxHeight:450},{footer:u((()=>["detail"!==se.value?(d(),h(f(_),{key:0,type:"primary",loading:be.value,onClick:ke},{default:u((()=>[y(b(f($)("stock.save")),1)])),_:1},8,["loading"])):w("",!0),m(f(_),{onClick:s[5]||(s[5]=e=>ue.value=!1)},{default:u((()=>[y(b(f($)("stock.cancel")),1)])),_:1})])),default:u((()=>["edit"===se.value?(d(),h(z,{key:0,ref_key:"writeRef",ref:ye,"form-schema":f(me).formSchema,"current-row":f(K).currentRow},null,8,["form-schema","current-row"])):w("",!0),"detail"===se.value?(d(),h(I,{key:1,"detail-schema":f(me).detailSchema,"current-row":f(K).currentRow},null,8,["detail-schema","current-row"])):w("",!0)])),_:1},8,["modelValue","title"])],64))}});export{L as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
