import{$ as e,aT as t,b0 as o,b3 as n,a8 as s,ad as a,P as d,aV as u,v as l,b$ as c,c5 as i,c9 as r,c6 as m,U as p,Q as v,R as f,d as y,Y as g,g as h,a2 as b,aF as M}from"./index.1a68aef2.js";import{g as x}from"./scroll2.bc735d56.js";import{P as E}from"./vnode2.c6de4a80.js";const k=(s,a,d)=>{let u={offsetX:0,offsetY:0};const l=e=>{const t=e.clientX,o=e.clientY,{offsetX:a,offsetY:d}=u,l=s.value.getBoundingClientRect(),c=l.left,i=l.top,r=l.width,m=l.height,p=document.documentElement.clientWidth,v=document.documentElement.clientHeight,f=-c+a,y=-i+d,g=p-c-r+a,h=v-i-m+d,b=e=>{const l=Math.min(Math.max(a+e.clientX-t,f),g),c=Math.min(Math.max(d+e.clientY-o,y),h);u={offsetX:l,offsetY:c},s.value.style.transform=`translate(${n(l)}, ${n(c)})`},M=()=>{document.removeEventListener("mousemove",b),document.removeEventListener("mouseup",M)};document.addEventListener("mousemove",b),document.addEventListener("mouseup",M)},c=()=>{a.value&&s.value&&a.value.removeEventListener("mousedown",l)};e((()=>{t((()=>{d.value?a.value&&s.value&&a.value.addEventListener("mousedown",l):c()}))})),o((()=>{c()}))},C=e=>{if(s(e)||a("[useLockscreen]","You need to pass a ref param to this function"),!d||u(document.body,"el-popup-parent--hidden"))return;let t=0,o=!1,n="0",p=0;const v=()=>{m(document.body,"el-popup-parent--hidden"),o&&(document.body.style.paddingRight=n)};l(e,(e=>{if(!e)return void v();o=!u(document.body,"el-popup-parent--hidden"),o&&(n=document.body.style.paddingRight,p=Number.parseInt(c(document.body,"paddingRight"),10)),t=x();const s=document.documentElement.clientHeight<document.body.scrollHeight,a=c(document.body,"overflowY");t>0&&(s||"scroll"===a)&&o&&(document.body.style.paddingRight=`${p+t}px`),i(document.body,"el-popup-parent--hidden")})),r((()=>v()))},w=e=>{if(!e)return{onClick:p,onMousedown:p,onMouseup:p};let t=!1,o=!1;return{onClick:n=>{t&&o&&e(n),t=o=!1},onMousedown:e=>{t=e.target===e.currentTarget},onMouseup:e=>{o=e.target===e.currentTarget}}};const L=y({name:"ElOverlay",props:v({mask:{type:Boolean,default:!0},customMaskEvent:{type:Boolean,default:!1},overlayClass:{type:f([String,Array,Object])},zIndex:{type:f([String,Number])}}),emits:{click:e=>e instanceof MouseEvent},setup(e,{slots:t,emit:o}){const n=g("overlay"),{onClick:s,onMousedown:a,onMouseup:d}=w(e.customMaskEvent?void 0:e=>{o("click",e)});return()=>e.mask?h("div",{class:[n.b(),e.overlayClass],style:{zIndex:e.zIndex},onClick:s,onMousedown:a,onMouseup:d},[b(t,"default")],E.STYLE|E.CLASS|E.PROPS,["onClick","onMouseup","onMousedown"]):M("div",{class:e.overlayClass,style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[b(t,"default")])}});export{L as E,C as a,w as b,k as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWwtb3ZlcmxheS5jYTg2NWQ1ZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZ2lzdHJ5Lm5wbW1pcnJvci5jb20rZWxlbWVudC1wbHVzQDIuMi42X3Z1ZUAzLjIuMzcvbm9kZV9tb2R1bGVzL2VsZW1lbnQtcGx1cy9lcy9ob29rcy91c2UtZHJhZ2dhYmxlL2luZGV4Mi5tanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vcmVnaXN0cnkubnBtbWlycm9yLmNvbStlbGVtZW50LXBsdXNAMi4yLjZfdnVlQDMuMi4zNy9ub2RlX21vZHVsZXMvZWxlbWVudC1wbHVzL2VzL2hvb2tzL3VzZS1sb2Nrc2NyZWVuL2luZGV4Mi5tanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vcmVnaXN0cnkubnBtbWlycm9yLmNvbStlbGVtZW50LXBsdXNAMi4yLjZfdnVlQDMuMi4zNy9ub2RlX21vZHVsZXMvZWxlbWVudC1wbHVzL2VzL2hvb2tzL3VzZS1zYW1lLXRhcmdldC9pbmRleDIubWpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZ2lzdHJ5Lm5wbW1pcnJvci5jb20rZWxlbWVudC1wbHVzQDIuMi42X3Z1ZUAzLjIuMzcvbm9kZV9tb2R1bGVzL2VsZW1lbnQtcGx1cy9lcy9jb21wb25lbnRzL292ZXJsYXkvaW5kZXgyLm1qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWdpc3RyeS5ucG1taXJyb3IuY29tK2VsZW1lbnQtcGx1c0AyLjIuNl92dWVAMy4yLjM3L25vZGVfbW9kdWxlcy9lbGVtZW50LXBsdXMvZXMvY29tcG9uZW50cy9vdmVybGF5L3NyYy9vdmVybGF5Mi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb25Nb3VudGVkLCB3YXRjaEVmZmVjdCwgb25CZWZvcmVVbm1vdW50IH0gZnJvbSAndnVlJztcbmltcG9ydCAnLi4vLi4vdXRpbHMvaW5kZXgyLm1qcyc7XG5pbXBvcnQgeyBhZGRVbml0IH0gZnJvbSAnLi4vLi4vdXRpbHMvZG9tL3N0eWxlMi5tanMnO1xuXG5jb25zdCB1c2VEcmFnZ2FibGUgPSAodGFyZ2V0UmVmLCBkcmFnUmVmLCBkcmFnZ2FibGUpID0+IHtcbiAgbGV0IHRyYW5zZm9ybSA9IHtcbiAgICBvZmZzZXRYOiAwLFxuICAgIG9mZnNldFk6IDBcbiAgfTtcbiAgY29uc3Qgb25Nb3VzZWRvd24gPSAoZSkgPT4ge1xuICAgIGNvbnN0IGRvd25YID0gZS5jbGllbnRYO1xuICAgIGNvbnN0IGRvd25ZID0gZS5jbGllbnRZO1xuICAgIGNvbnN0IHsgb2Zmc2V0WCwgb2Zmc2V0WSB9ID0gdHJhbnNmb3JtO1xuICAgIGNvbnN0IHRhcmdldFJlY3QgPSB0YXJnZXRSZWYudmFsdWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgdGFyZ2V0TGVmdCA9IHRhcmdldFJlY3QubGVmdDtcbiAgICBjb25zdCB0YXJnZXRUb3AgPSB0YXJnZXRSZWN0LnRvcDtcbiAgICBjb25zdCB0YXJnZXRXaWR0aCA9IHRhcmdldFJlY3Qud2lkdGg7XG4gICAgY29uc3QgdGFyZ2V0SGVpZ2h0ID0gdGFyZ2V0UmVjdC5oZWlnaHQ7XG4gICAgY29uc3QgY2xpZW50V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gICAgY29uc3QgY2xpZW50SGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgICBjb25zdCBtaW5MZWZ0ID0gLXRhcmdldExlZnQgKyBvZmZzZXRYO1xuICAgIGNvbnN0IG1pblRvcCA9IC10YXJnZXRUb3AgKyBvZmZzZXRZO1xuICAgIGNvbnN0IG1heExlZnQgPSBjbGllbnRXaWR0aCAtIHRhcmdldExlZnQgLSB0YXJnZXRXaWR0aCArIG9mZnNldFg7XG4gICAgY29uc3QgbWF4VG9wID0gY2xpZW50SGVpZ2h0IC0gdGFyZ2V0VG9wIC0gdGFyZ2V0SGVpZ2h0ICsgb2Zmc2V0WTtcbiAgICBjb25zdCBvbk1vdXNlbW92ZSA9IChlMikgPT4ge1xuICAgICAgY29uc3QgbW92ZVggPSBNYXRoLm1pbihNYXRoLm1heChvZmZzZXRYICsgZTIuY2xpZW50WCAtIGRvd25YLCBtaW5MZWZ0KSwgbWF4TGVmdCk7XG4gICAgICBjb25zdCBtb3ZlWSA9IE1hdGgubWluKE1hdGgubWF4KG9mZnNldFkgKyBlMi5jbGllbnRZIC0gZG93blksIG1pblRvcCksIG1heFRvcCk7XG4gICAgICB0cmFuc2Zvcm0gPSB7XG4gICAgICAgIG9mZnNldFg6IG1vdmVYLFxuICAgICAgICBvZmZzZXRZOiBtb3ZlWVxuICAgICAgfTtcbiAgICAgIHRhcmdldFJlZi52YWx1ZS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCR7YWRkVW5pdChtb3ZlWCl9LCAke2FkZFVuaXQobW92ZVkpfSlgO1xuICAgIH07XG4gICAgY29uc3Qgb25Nb3VzZXVwID0gKCkgPT4ge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBvbk1vdXNlbW92ZSk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBvbk1vdXNldXApO1xuICAgIH07XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBvbk1vdXNlbW92ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgb25Nb3VzZXVwKTtcbiAgfTtcbiAgY29uc3Qgb25EcmFnZ2FibGUgPSAoKSA9PiB7XG4gICAgaWYgKGRyYWdSZWYudmFsdWUgJiYgdGFyZ2V0UmVmLnZhbHVlKSB7XG4gICAgICBkcmFnUmVmLnZhbHVlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgb25Nb3VzZWRvd24pO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb2ZmRHJhZ2dhYmxlID0gKCkgPT4ge1xuICAgIGlmIChkcmFnUmVmLnZhbHVlICYmIHRhcmdldFJlZi52YWx1ZSkge1xuICAgICAgZHJhZ1JlZi52YWx1ZS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIG9uTW91c2Vkb3duKTtcbiAgICB9XG4gIH07XG4gIG9uTW91bnRlZCgoKSA9PiB7XG4gICAgd2F0Y2hFZmZlY3QoKCkgPT4ge1xuICAgICAgaWYgKGRyYWdnYWJsZS52YWx1ZSkge1xuICAgICAgICBvbkRyYWdnYWJsZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2ZmRHJhZ2dhYmxlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICBvbkJlZm9yZVVubW91bnQoKCkgPT4ge1xuICAgIG9mZkRyYWdnYWJsZSgpO1xuICB9KTtcbn07XG5cbmV4cG9ydCB7IHVzZURyYWdnYWJsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgyLm1qcy5tYXBcbiIsImltcG9ydCB7IGlzUmVmLCB3YXRjaCwgb25TY29wZURpc3Bvc2UgfSBmcm9tICd2dWUnO1xuaW1wb3J0IHsgaXNDbGllbnQgfSBmcm9tICdAdnVldXNlL2NvcmUnO1xuaW1wb3J0ICcuLi8uLi91dGlscy9pbmRleDIubWpzJztcbmltcG9ydCB7IHRocm93RXJyb3IgfSBmcm9tICcuLi8uLi91dGlscy9lcnJvcjIubWpzJztcbmltcG9ydCB7IGhhc0NsYXNzLCByZW1vdmVDbGFzcywgZ2V0U3R5bGUsIGFkZENsYXNzIH0gZnJvbSAnLi4vLi4vdXRpbHMvZG9tL3N0eWxlMi5tanMnO1xuaW1wb3J0IHsgZ2V0U2Nyb2xsQmFyV2lkdGggfSBmcm9tICcuLi8uLi91dGlscy9kb20vc2Nyb2xsMi5tanMnO1xuXG5jb25zdCB1c2VMb2Nrc2NyZWVuID0gKHRyaWdnZXIpID0+IHtcbiAgaWYgKCFpc1JlZih0cmlnZ2VyKSkge1xuICAgIHRocm93RXJyb3IoXCJbdXNlTG9ja3NjcmVlbl1cIiwgXCJZb3UgbmVlZCB0byBwYXNzIGEgcmVmIHBhcmFtIHRvIHRoaXMgZnVuY3Rpb25cIik7XG4gIH1cbiAgaWYgKCFpc0NsaWVudCB8fCBoYXNDbGFzcyhkb2N1bWVudC5ib2R5LCBcImVsLXBvcHVwLXBhcmVudC0taGlkZGVuXCIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxldCBzY3JvbGxCYXJXaWR0aCA9IDA7XG4gIGxldCB3aXRob3V0SGlkZGVuQ2xhc3MgPSBmYWxzZTtcbiAgbGV0IGJvZHlQYWRkaW5nUmlnaHQgPSBcIjBcIjtcbiAgbGV0IGNvbXB1dGVkQm9keVBhZGRpbmdSaWdodCA9IDA7XG4gIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gICAgcmVtb3ZlQ2xhc3MoZG9jdW1lbnQuYm9keSwgXCJlbC1wb3B1cC1wYXJlbnQtLWhpZGRlblwiKTtcbiAgICBpZiAod2l0aG91dEhpZGRlbkNsYXNzKSB7XG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IGJvZHlQYWRkaW5nUmlnaHQ7XG4gICAgfVxuICB9O1xuICB3YXRjaCh0cmlnZ2VyLCAodmFsKSA9PiB7XG4gICAgaWYgKCF2YWwpIHtcbiAgICAgIGNsZWFudXAoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgd2l0aG91dEhpZGRlbkNsYXNzID0gIWhhc0NsYXNzKGRvY3VtZW50LmJvZHksIFwiZWwtcG9wdXAtcGFyZW50LS1oaWRkZW5cIik7XG4gICAgaWYgKHdpdGhvdXRIaWRkZW5DbGFzcykge1xuICAgICAgYm9keVBhZGRpbmdSaWdodCA9IGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0O1xuICAgICAgY29tcHV0ZWRCb2R5UGFkZGluZ1JpZ2h0ID0gTnVtYmVyLnBhcnNlSW50KGdldFN0eWxlKGRvY3VtZW50LmJvZHksIFwicGFkZGluZ1JpZ2h0XCIpLCAxMCk7XG4gICAgfVxuICAgIHNjcm9sbEJhcldpZHRoID0gZ2V0U2Nyb2xsQmFyV2lkdGgoKTtcbiAgICBjb25zdCBib2R5SGFzT3ZlcmZsb3cgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IDwgZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQ7XG4gICAgY29uc3QgYm9keU92ZXJmbG93WSA9IGdldFN0eWxlKGRvY3VtZW50LmJvZHksIFwib3ZlcmZsb3dZXCIpO1xuICAgIGlmIChzY3JvbGxCYXJXaWR0aCA+IDAgJiYgKGJvZHlIYXNPdmVyZmxvdyB8fCBib2R5T3ZlcmZsb3dZID09PSBcInNjcm9sbFwiKSAmJiB3aXRob3V0SGlkZGVuQ2xhc3MpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0ID0gYCR7Y29tcHV0ZWRCb2R5UGFkZGluZ1JpZ2h0ICsgc2Nyb2xsQmFyV2lkdGh9cHhgO1xuICAgIH1cbiAgICBhZGRDbGFzcyhkb2N1bWVudC5ib2R5LCBcImVsLXBvcHVwLXBhcmVudC0taGlkZGVuXCIpO1xuICB9KTtcbiAgb25TY29wZURpc3Bvc2UoKCkgPT4gY2xlYW51cCgpKTtcbn07XG5cbmV4cG9ydCB7IHVzZUxvY2tzY3JlZW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Mi5tanMubWFwXG4iLCJpbXBvcnQgeyBOT09QIH0gZnJvbSAnQHZ1ZS9zaGFyZWQnO1xuXG5jb25zdCB1c2VTYW1lVGFyZ2V0ID0gKGhhbmRsZUNsaWNrKSA9PiB7XG4gIGlmICghaGFuZGxlQ2xpY2spIHtcbiAgICByZXR1cm4geyBvbkNsaWNrOiBOT09QLCBvbk1vdXNlZG93bjogTk9PUCwgb25Nb3VzZXVwOiBOT09QIH07XG4gIH1cbiAgbGV0IG1vdXNlZG93blRhcmdldCA9IGZhbHNlO1xuICBsZXQgbW91c2V1cFRhcmdldCA9IGZhbHNlO1xuICBjb25zdCBvbkNsaWNrID0gKGUpID0+IHtcbiAgICBpZiAobW91c2Vkb3duVGFyZ2V0ICYmIG1vdXNldXBUYXJnZXQpIHtcbiAgICAgIGhhbmRsZUNsaWNrKGUpO1xuICAgIH1cbiAgICBtb3VzZWRvd25UYXJnZXQgPSBtb3VzZXVwVGFyZ2V0ID0gZmFsc2U7XG4gIH07XG4gIGNvbnN0IG9uTW91c2Vkb3duID0gKGUpID0+IHtcbiAgICBtb3VzZWRvd25UYXJnZXQgPSBlLnRhcmdldCA9PT0gZS5jdXJyZW50VGFyZ2V0O1xuICB9O1xuICBjb25zdCBvbk1vdXNldXAgPSAoZSkgPT4ge1xuICAgIG1vdXNldXBUYXJnZXQgPSBlLnRhcmdldCA9PT0gZS5jdXJyZW50VGFyZ2V0O1xuICB9O1xuICByZXR1cm4geyBvbkNsaWNrLCBvbk1vdXNlZG93biwgb25Nb3VzZXVwIH07XG59O1xuXG5leHBvcnQgeyB1c2VTYW1lVGFyZ2V0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleDIubWpzLm1hcFxuIiwiaW1wb3J0IE92ZXJsYXkgZnJvbSAnLi9zcmMvb3ZlcmxheTIubWpzJztcbmV4cG9ydCB7IG92ZXJsYXlFbWl0cywgb3ZlcmxheVByb3BzIH0gZnJvbSAnLi9zcmMvb3ZlcmxheTIubWpzJztcblxuY29uc3QgRWxPdmVybGF5ID0gT3ZlcmxheTtcblxuZXhwb3J0IHsgRWxPdmVybGF5LCBFbE92ZXJsYXkgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgyLm1qcy5tYXBcbiIsImltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUsIHJlbmRlclNsb3QsIGggfSBmcm9tICd2dWUnO1xuaW1wb3J0ICcuLi8uLi8uLi91dGlscy9pbmRleDIubWpzJztcbmltcG9ydCAnLi4vLi4vLi4vaG9va3MvaW5kZXgyLm1qcyc7XG5pbXBvcnQgeyBidWlsZFByb3BzLCBkZWZpbmVQcm9wVHlwZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3Z1ZS9wcm9wcy9ydW50aW1lMi5tanMnO1xuaW1wb3J0IHsgdXNlTmFtZXNwYWNlIH0gZnJvbSAnLi4vLi4vLi4vaG9va3MvdXNlLW5hbWVzcGFjZS9pbmRleDIubWpzJztcbmltcG9ydCB7IHVzZVNhbWVUYXJnZXQgfSBmcm9tICcuLi8uLi8uLi9ob29rcy91c2Utc2FtZS10YXJnZXQvaW5kZXgyLm1qcyc7XG5pbXBvcnQgeyBQYXRjaEZsYWdzIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdnVlL3Zub2RlMi5tanMnO1xuXG5jb25zdCBvdmVybGF5UHJvcHMgPSBidWlsZFByb3BzKHtcbiAgbWFzazoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogdHJ1ZVxuICB9LFxuICBjdXN0b21NYXNrRXZlbnQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH0sXG4gIG92ZXJsYXlDbGFzczoge1xuICAgIHR5cGU6IGRlZmluZVByb3BUeXBlKFtcbiAgICAgIFN0cmluZyxcbiAgICAgIEFycmF5LFxuICAgICAgT2JqZWN0XG4gICAgXSlcbiAgfSxcbiAgekluZGV4OiB7XG4gICAgdHlwZTogZGVmaW5lUHJvcFR5cGUoW1N0cmluZywgTnVtYmVyXSlcbiAgfVxufSk7XG5jb25zdCBvdmVybGF5RW1pdHMgPSB7XG4gIGNsaWNrOiAoZXZ0KSA9PiBldnQgaW5zdGFuY2VvZiBNb3VzZUV2ZW50XG59O1xudmFyIE92ZXJsYXkgPSBkZWZpbmVDb21wb25lbnQoe1xuICBuYW1lOiBcIkVsT3ZlcmxheVwiLFxuICBwcm9wczogb3ZlcmxheVByb3BzLFxuICBlbWl0czogb3ZlcmxheUVtaXRzLFxuICBzZXR1cChwcm9wcywgeyBzbG90cywgZW1pdCB9KSB7XG4gICAgY29uc3QgbnMgPSB1c2VOYW1lc3BhY2UoXCJvdmVybGF5XCIpO1xuICAgIGNvbnN0IG9uTWFza0NsaWNrID0gKGUpID0+IHtcbiAgICAgIGVtaXQoXCJjbGlja1wiLCBlKTtcbiAgICB9O1xuICAgIGNvbnN0IHsgb25DbGljaywgb25Nb3VzZWRvd24sIG9uTW91c2V1cCB9ID0gdXNlU2FtZVRhcmdldChwcm9wcy5jdXN0b21NYXNrRXZlbnQgPyB2b2lkIDAgOiBvbk1hc2tDbGljayk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJldHVybiBwcm9wcy5tYXNrID8gY3JlYXRlVk5vZGUoXCJkaXZcIiwge1xuICAgICAgICBjbGFzczogW25zLmIoKSwgcHJvcHMub3ZlcmxheUNsYXNzXSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICB6SW5kZXg6IHByb3BzLnpJbmRleFxuICAgICAgICB9LFxuICAgICAgICBvbkNsaWNrLFxuICAgICAgICBvbk1vdXNlZG93bixcbiAgICAgICAgb25Nb3VzZXVwXG4gICAgICB9LCBbcmVuZGVyU2xvdChzbG90cywgXCJkZWZhdWx0XCIpXSwgUGF0Y2hGbGFncy5TVFlMRSB8IFBhdGNoRmxhZ3MuQ0xBU1MgfCBQYXRjaEZsYWdzLlBST1BTLCBbXCJvbkNsaWNrXCIsIFwib25Nb3VzZXVwXCIsIFwib25Nb3VzZWRvd25cIl0pIDogaChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzOiBwcm9wcy5vdmVybGF5Q2xhc3MsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgekluZGV4OiBwcm9wcy56SW5kZXgsXG4gICAgICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgICAgICB0b3A6IFwiMHB4XCIsXG4gICAgICAgICAgcmlnaHQ6IFwiMHB4XCIsXG4gICAgICAgICAgYm90dG9tOiBcIjBweFwiLFxuICAgICAgICAgIGxlZnQ6IFwiMHB4XCJcbiAgICAgICAgfVxuICAgICAgfSwgW3JlbmRlclNsb3Qoc2xvdHMsIFwiZGVmYXVsdFwiKV0pO1xuICAgIH07XG4gIH1cbn0pO1xuXG5leHBvcnQgeyBPdmVybGF5IGFzIGRlZmF1bHQsIG92ZXJsYXlFbWl0cywgb3ZlcmxheVByb3BzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdmVybGF5Mi5tanMubWFwXG4iXSwibmFtZXMiOlsidXNlRHJhZ2dhYmxlIiwidGFyZ2V0UmVmIiwiZHJhZ1JlZiIsImRyYWdnYWJsZSIsInRyYW5zZm9ybSIsIm9mZnNldFgiLCJvZmZzZXRZIiwib25Nb3VzZWRvd24iLCJlIiwiZG93blgiLCJjbGllbnRYIiwiZG93blkiLCJjbGllbnRZIiwidGFyZ2V0UmVjdCIsInZhbHVlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidGFyZ2V0TGVmdCIsImxlZnQiLCJ0YXJnZXRUb3AiLCJ0b3AiLCJ0YXJnZXRXaWR0aCIsIndpZHRoIiwidGFyZ2V0SGVpZ2h0IiwiaGVpZ2h0IiwiY2xpZW50V2lkdGgiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudEhlaWdodCIsIm1pbkxlZnQiLCJtaW5Ub3AiLCJtYXhMZWZ0IiwibWF4VG9wIiwib25Nb3VzZW1vdmUiLCJlMiIsIm1vdmVYIiwiTWF0aCIsIm1pbiIsIm1heCIsIm1vdmVZIiwic3R5bGUiLCJhZGRVbml0Iiwib25Nb3VzZXVwIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJvZmZEcmFnZ2FibGUiLCJvbk1vdW50ZWQiLCJ3YXRjaEVmZmVjdCIsIm9uQmVmb3JlVW5tb3VudCIsInVzZUxvY2tzY3JlZW4iLCJ0cmlnZ2VyIiwiaXNSZWYiLCJ0aHJvd0Vycm9yIiwiaXNDbGllbnQiLCJoYXNDbGFzcyIsImJvZHkiLCJzY3JvbGxCYXJXaWR0aCIsIndpdGhvdXRIaWRkZW5DbGFzcyIsImJvZHlQYWRkaW5nUmlnaHQiLCJjb21wdXRlZEJvZHlQYWRkaW5nUmlnaHQiLCJjbGVhbnVwIiwicmVtb3ZlQ2xhc3MiLCJwYWRkaW5nUmlnaHQiLCJ3YXRjaCIsInZhbCIsIk51bWJlciIsInBhcnNlSW50IiwiZ2V0U3R5bGUiLCJnZXRTY3JvbGxCYXJXaWR0aCIsImJvZHlIYXNPdmVyZmxvdyIsInNjcm9sbEhlaWdodCIsImJvZHlPdmVyZmxvd1kiLCJhZGRDbGFzcyIsIm9uU2NvcGVEaXNwb3NlIiwidXNlU2FtZVRhcmdldCIsImhhbmRsZUNsaWNrIiwib25DbGljayIsIk5PT1AiLCJtb3VzZWRvd25UYXJnZXQiLCJtb3VzZXVwVGFyZ2V0IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIkVsT3ZlcmxheSIsImRlZmluZUNvbXBvbmVudCIsIm5hbWUiLCJwcm9wcyIsImJ1aWxkUHJvcHMiLCJtYXNrIiwidHlwZSIsIkJvb2xlYW4iLCJkZWZhdWx0IiwiY3VzdG9tTWFza0V2ZW50Iiwib3ZlcmxheUNsYXNzIiwiZGVmaW5lUHJvcFR5cGUiLCJTdHJpbmciLCJBcnJheSIsIk9iamVjdCIsInpJbmRleCIsImVtaXRzIiwiY2xpY2siLCJldnQiLCJNb3VzZUV2ZW50Iiwic2V0dXAiLCJzbG90cyIsImVtaXQiLCJucyIsInVzZU5hbWVzcGFjZSIsImNyZWF0ZVZOb2RlIiwiY2xhc3MiLCJiIiwicmVuZGVyU2xvdCIsIlBhdGNoRmxhZ3MiLCJTVFlMRSIsIkNMQVNTIiwiUFJPUFMiLCJoIiwicG9zaXRpb24iLCJyaWdodCIsImJvdHRvbSJdLCJtYXBwaW5ncyI6Im1SQUlLLE1BQUNBLEVBQWUsQ0FBQ0MsRUFBV0MsRUFBU0MsS0FDeEMsSUFBSUMsRUFBWSxDQUNkQyxRQUFTLEVBQ1RDLFFBQVMsR0FFTCxNQUFBQyxFQUFlQyxJQUNuQixNQUFNQyxFQUFRRCxFQUFFRSxRQUNWQyxFQUFRSCxFQUFFSSxTQUNWUCxRQUFFQSxFQUFTQyxRQUFBQSxHQUFZRixFQUN2QlMsRUFBYVosRUFBVWEsTUFBTUMsd0JBQzdCQyxFQUFhSCxFQUFXSSxLQUN4QkMsRUFBWUwsRUFBV00sSUFDdkJDLEVBQWNQLEVBQVdRLE1BQ3pCQyxFQUFlVCxFQUFXVSxPQUMxQkMsRUFBY0MsU0FBU0MsZ0JBQWdCRixZQUN2Q0csRUFBZUYsU0FBU0MsZ0JBQWdCQyxhQUN4Q0MsR0FBV1osRUFBYVgsRUFDeEJ3QixHQUFVWCxFQUFZWixFQUN0QndCLEVBQVVOLEVBQWNSLEVBQWFJLEVBQWNmLEVBQ25EMEIsRUFBU0osRUFBZVQsRUFBWUksRUFBZWhCLEVBQ25EMEIsRUFBZUMsSUFDYixNQUFBQyxFQUFRQyxLQUFLQyxJQUFJRCxLQUFLRSxJQUFJaEMsRUFBVTRCLEVBQUd2QixRQUFVRCxFQUFPbUIsR0FBVUUsR0FDbEVRLEVBQVFILEtBQUtDLElBQUlELEtBQUtFLElBQUkvQixFQUFVMkIsRUFBR3JCLFFBQVVELEVBQU9rQixHQUFTRSxHQUMzRDNCLEVBQUEsQ0FDVkMsUUFBUzZCLEVBQ1Q1QixRQUFTZ0MsR0FFRHJDLEVBQUFhLE1BQU15QixNQUFNbkMsVUFBWSxhQUFhb0MsRUFBUU4sT0FBV00sRUFBUUYsT0FFdEVHLEVBQVksS0FDUGhCLFNBQUFpQixvQkFBb0IsWUFBYVYsR0FDakNQLFNBQUFpQixvQkFBb0IsVUFBV0QsSUFFakNoQixTQUFBa0IsaUJBQWlCLFlBQWFYLEdBQzlCUCxTQUFBa0IsaUJBQWlCLFVBQVdGLElBT2pDRyxFQUFlLEtBQ2YxQyxFQUFRWSxPQUFTYixFQUFVYSxPQUNyQlosRUFBQVksTUFBTTRCLG9CQUFvQixZQUFhbkMsSUFHbkRzQyxHQUFVLEtBQ1JDLEdBQVksS0FDTjNDLEVBQVVXLE1BWFpaLEVBQVFZLE9BQVNiLEVBQVVhLE9BQ3JCWixFQUFBWSxNQUFNNkIsaUJBQWlCLFlBQWFwQyxhQWlCaER3QyxHQUFnQixhQ3BEWkMsRUFBaUJDLElBSXJCLEdBSEtDLEVBQU1ELElBQ1RFLEVBQVcsa0JBQW1CLGtEQUUzQkMsR0FBWUMsRUFBUzVCLFNBQVM2QixLQUFNLDJCQUN2QyxPQUVGLElBQUlDLEVBQWlCLEVBQ2pCQyxHQUFxQixFQUNyQkMsRUFBbUIsSUFDbkJDLEVBQTJCLEVBQy9CLE1BQU1DLEVBQVUsS0FDRkMsRUFBQW5DLFNBQVM2QixLQUFNLDJCQUN2QkUsSUFDTy9CLFNBQUE2QixLQUFLZixNQUFNc0IsYUFBZUosSUFHakNLLEVBQUFiLEdBQVVjLElBQ2QsSUFBS0EsRUFFSCxnQkFFRlAsR0FBc0JILEVBQVM1QixTQUFTNkIsS0FBTSwyQkFDMUNFLElBQ2lCQyxFQUFBaEMsU0FBUzZCLEtBQUtmLE1BQU1zQixhQUN2Q0gsRUFBMkJNLE9BQU9DLFNBQVNDLEVBQVN6QyxTQUFTNkIsS0FBTSxnQkFBaUIsS0FFdEZDLEVBQWlCWSxJQUNqQixNQUFNQyxFQUFrQjNDLFNBQVNDLGdCQUFnQkMsYUFBZUYsU0FBUzZCLEtBQUtlLGFBQ3hFQyxFQUFnQkosRUFBU3pDLFNBQVM2QixLQUFNLGFBQzFDQyxFQUFpQixJQUFNYSxHQUFxQyxXQUFsQkUsSUFBK0JkLElBQzNFL0IsU0FBUzZCLEtBQUtmLE1BQU1zQixhQUFlLEdBQUdILEVBQTJCSCxPQUUxRGdCLEVBQUE5QyxTQUFTNkIsS0FBTSw4QkFFWGtCLEdBQUEsSUFBTWIsT0N4Q2pCYyxFQUFpQkMsSUFDckIsSUFBS0EsRUFDSCxNQUFPLENBQUVDLFFBQVNDLEVBQU1yRSxZQUFhcUUsRUFBTW5DLFVBQVdtQyxHQUV4RCxJQUFJQyxHQUFrQixFQUNsQkMsR0FBZ0IsRUFhYixNQUFBLENBQUVILFFBWlFuRSxJQUNYcUUsR0FBbUJDLEdBQ3JCSixFQUFZbEUsR0FFZHFFLEVBQWtCQyxHQUFnQixHQVFsQnZFLFlBTkdDLElBQ0RxRSxFQUFBckUsRUFBRXVFLFNBQVd2RSxFQUFFd0UsZUFLSnZDLFVBSFpqQyxJQUNEc0UsRUFBQXRFLEVBQUV1RSxTQUFXdkUsRUFBRXdFLGlCQ2Y5QixNQUFDQyxFQzRCUUMsRUFBZ0IsQ0FDNUJDLEtBQU0sWUFDTkMsTUF6Qm1CQyxFQUFXLENBQzlCQyxLQUFNLENBQ0pDLEtBQU1DLFFBQ05DLFNBQVMsR0FFWEMsZ0JBQWlCLENBQ2ZILEtBQU1DLFFBQ05DLFNBQVMsR0FFWEUsYUFBYyxDQUNaSixLQUFNSyxFQUFlLENBQ25CQyxPQUNBQyxNQUNBQyxVQUdKQyxPQUFRLENBQ05ULEtBQU1LLEVBQWUsQ0FBQ0MsT0FBUTdCLFlBU2hDaUMsTUFObUIsQ0FDbkJDLE1BQVFDLEdBQVFBLGFBQWVDLFlBTS9CQyxNQUFNakIsR0FBT2tCLE1BQUVBLEVBQUFDLEtBQU9BLElBQ2QsTUFBQUMsRUFBS0MsRUFBYSxZQUlsQjlCLFFBQUVBLGNBQVNwRSxFQUFha0MsVUFBQUEsR0FBY2dDLEVBQWNXLEVBQU1NLHFCQUFrQixFQUg3RGxGLElBQ25CK0YsRUFBSyxRQUFTL0YsS0FHaEIsTUFBTyxJQUNFNEUsRUFBTUUsS0FBT29CLEVBQVksTUFBTyxDQUNyQ0MsTUFBTyxDQUFDSCxFQUFHSSxJQUFLeEIsRUFBTU8sY0FDdEJwRCxNQUFPLENBQ0x5RCxPQUFRWixFQUFNWSxRQUVoQnJCLFFBQUFBLEVBQ0FwRSxZQUFBQSxFQUNBa0MsVUFBQUEsR0FDQyxDQUFDb0UsRUFBV1AsRUFBTyxZQUFhUSxFQUFXQyxNQUFRRCxFQUFXRSxNQUFRRixFQUFXRyxNQUFPLENBQUMsVUFBVyxZQUFhLGdCQUFrQkMsRUFBRSxNQUFPLENBQzdJUCxNQUFPdkIsRUFBTU8sYUFDYnBELE1BQU8sQ0FDTHlELE9BQVFaLEVBQU1ZLE9BQ2RtQixTQUFVLFFBQ1ZoRyxJQUFLLE1BQ0xpRyxNQUFPLE1BQ1BDLE9BQVEsTUFDUnBHLEtBQU0sUUFFUCxDQUFDNEYsRUFBV1AsRUFBTyJ9
