import{d as e,s as a,bQ as o,q as t,r as l,u as n,o as s,c as i,g as r,w as c,a as p,G as d,l as u,e as m,x as f,t as g,at as b,k as v,ab as y,_ as h}from"./index.b1059dae.js";import{_ as w}from"./ContentWrap.16a17a2c.js";import{_ as k}from"./SearchButton.24a20768.js";import{_ as j}from"./Dialog.83318e14.js";import{E as _}from"./el-button.fa3cf5bb.js";import{E as C,a as P,b as x}from"./el-dropdown-item.cc764d4c.js";import"./el-popper.bb59900e.js";import{F as S}from"./Form.8dc6e1de.js";import{_ as R}from"./Table.vue_vue_type_script_lang.7413d2fb.js";import{u as I}from"./useAxios.b7f2bb2e.js";import{u as z}from"./useTable.3b2e2107.js";import D from"./Write.c948e898.js";import E from"./Detail.deb3b90e.js";import{u as A}from"./useCrudSchemas.4529f5d7.js";import{u as B}from"./useIcon.90fdf734.js";import{g as V}from"./index.c4d6caeb.js";import{p as G}from"./echarts-data.a83cf31f.js";import L from"./Analyze.262a1452.js";import{f as F}from"./tsxHelper.965510a5.js";import"./el-card.1ec308ce.js";import"./useForm.9c2aed63.js";import"./el-overlay.e2b68649.js";import"./scroll2.547c442b.js";import"./vnode2.fb06813d.js";import"./use-dialog2.df789107.js";import"./event2.1741f333.js";import"./index2.818f7ba6.js";import"./index2.41c46d54.js";import"./refs2.528ab877.js";import"./index2.094f2439.js";import"./el-col.6fe24f7e.js";import"./typescript2.0e462989.js";import"./el-input.06003b15.js";import"./el-tag.0c1f86f6.js";import"./el-input-number.d6a5ff91.js";import"./el-switch.4afbc0fe.js";import"./validator2.e1318026.js";import"./el-divider.cb2e339e.js";import"./InputPassword.ff88492e.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./Editor.049c780c.js";import"./debounce.a82ef6ea.js";import"./aria2.b5095a02.js";import"./browser2.b89d9fd3.js";import"./el-message-box.06586f35.js";import"./useValidator.417be559.js";import"./Descriptions.2977bf96.js";import"./index2.d0413be8.js";import"./tree.9e4d3f05.js";import"./Echart.60b57181.js";const O=I(),U=async e=>{const a=await O.get({url:"/categories",params:e});return a&&a.data},H=async e=>{const a=e.toString(),o=await O.post({url:"/categories/delCate",data:{ids:a}});return o&&o.data},T={class:"mb-10px float-left"},Y=e({__name:"GroupList",setup(e){const{t:I}=u(),Y=a(G),M=a({title:{text:I("group.Size_Distribution"),left:"center"},tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},series:[{name:I("analysis.userAccessSource"),type:"pie",radius:"55%",center:["50%","60%"],data:[{value:335,name:I("analysis.directAccess")},{value:310,name:I("analysis.mailMarketing")},{value:234,name:I("analysis.allianceAdvertising")},{value:135,name:I("analysis.videoAdvertising")},{value:1548,name:I("analysis.searchEngines")}]}]}),{register:q,tableObject:W,methods:Q}=z({getListApi:U,delListApi:H,response:{list:"list",total:"total"}}),J=o(),{wsCache:K}=t(),N=K.get(J.getUserInfo);let X=[];(async()=>{const e=await(async()=>{const e=await O.get({url:"/categories/getAll"});return e&&e.data})().catch((()=>{})).finally((()=>{je.value=!1}));console.log("allGroupList==res=====",e),e&&(X=e.data,de.length>=2&&(de[0].componentProps.options=X))})();const Z=l("");(async()=>{const e=await V().catch((()=>{})).finally((()=>{je.value=!1}));console.log("currUser==res=====",e),e&&(Z.value=e.data.id,N.id=e.data.id,K.set(J.getUserInfo,N))})();const{getList:$,setSearchParams:ee}=Q,{push:ae}=n(),oe=B({icon:"ant-design:plus-outlined"}),te=B({icon:"fluent:arrow-enter-20-filled"}),le=B({icon:"ep:delete"}),ne=B({icon:"ant-design:caret-down-filled"});let se=n();$();const ie=l(),re=l(),ce=e=>{console.log("genExp--val===",W.currentRow);let a=(e=>{for(let a=0;a<X.length;a++)if(X[a].value==e)return X[a].label})(e);pe(!1,a)},pe=(e,a)=>{var o,t;const l=null==(o=p(re))?void 0:o.getElFormRef();e?null==l||l.resetFields():null==(t=p(re))||t.setValues({expression:a})},de=a([{field:"cate1",label:I("stock.theGroup")+"1",component:"Select",colProps:{span:12},componentProps:{onChange:ce,style:{width:"400px"},options:X}},{field:"calc1",label:"",component:"RadioButton",colProps:{span:12},componentProps:{onChange:ce,options:[{label:I("stock.union"),value:1},{label:I("stock.intersect"),value:2},{label:I("stock.minus"),value:3}]}},{field:"cate2",label:I("stock.theGroup")+"2",component:"Select",colProps:{span:12},componentProps:{onChange:ce,style:{width:"400px"},options:[{label:"option1",value:"1"},{label:"option2",value:"2"}]}},{field:"calc2",label:"",component:"RadioButton",colProps:{span:12},componentProps:{onChange:ce,options:[{label:I("stock.union"),value:1},{label:I("stock.intersect"),value:2},{label:I("stock.minus"),value:3}]}},{field:"cate3",label:I("stock.theGroup")+"3",component:"Select",colProps:{span:12},componentProps:{onChange:ce,style:{width:"400px"},options:[{label:"option1",value:"1"},{label:"option2",value:"2"}]}},{field:"calc3",label:"",component:"RadioButton",colProps:{span:12},componentProps:{onChange:ce,options:[{label:I("stock.union"),value:1},{label:I("stock.intersect"),value:2},{label:I("stock.minus"),value:3}]}},{field:"cate4",label:I("stock.theGroup")+"4",component:"Select",colProps:{span:12},componentProps:{onChange:ce,style:{width:"400px"},options:[{label:"option1",value:"1"},{label:"option2",value:"2"}]}},{field:"expression",label:I("stock.expression"),component:"Input",colProps:{span:24},componentProps:{readonly:!0}},{field:"newCate",label:I("stock.newCate"),component:"Input",colProps:{span:12},componentProps:{}}]),ue=a([{field:"index",label:I("tableDemo.index"),type:"index",form:{show:!1},detail:{show:!1}},{field:"name",label:I("group.name"),search:{show:!0,componentProps:{onChange:e=>{console.log("genCode--val===",e)}}},form:{colProps:{span:24}},detail:{span:12}},{field:"stock_count",label:I("group.stock_count"),type:"count",disabled:!0,form:{show:!1,componentProps:{disabled:!0}}},{field:"created_at",label:I("tableDemo.displayTime"),form:{show:!1,component:"DatePicker",componentProps:{type:"datetime",valueFormat:"YYYY-MM-DD HH:mm:ss",disabled:!0}}},{field:"user_name",label:I("stock.creator"),form:{show:!1}},{field:"remark",label:I("group.remark"),form:{component:"Input",colProps:{span:24}}},{field:"stocks",label:I("group.stocks"),table:{show:!1},form:{component:"Input",componentProps:{type:"textarea",rows:15},colProps:{span:24}}},{field:"action",width:"260px",label:I("stock.action"),form:{show:!1},detail:{show:!1}}]),{allSchemas:me}=A(ue),fe=l(!1);l(!1);const ge=l(""),be=l(!1),ve=l(!1),ye=async(e,a)=>{var o;W.currentRow=e;const{delList:t,getSelections:l}=Q,n=await l();ve.value=!0,await t(a?n.map((e=>e.id)):[null==(o=W.currentRow)?void 0:o.id],a).finally((()=>{ve.value=!1}))},he=l(""),we=async(e,a)=>{if(ge.value=I("edit"===a?"exampleDemo.edit":"group.analyze"),he.value=a,W.currentRow=e,"edit"===a){const a=await(async e=>{const a=await O.get({url:"/categories/getStocksByCategoryId",params:e});return a&&a.data})({id:e.id}).catch((()=>{})).finally((()=>{je.value=!1}));if(console.log("res=====",a),a){let e=[];for(let o of a.data)e.push(o.code);W.currentRow.stocks=e.join(","),fe.value=!0}}else if("analyze"===a){fe.value=!0;const a=await(async e=>{const a=await O.get({url:"/categories/getAnalyzeByCategoryId",params:{id:e}});return a&&a.data})(null==e?void 0:e.id).catch((()=>{})).finally((()=>{je.value=!1}));console.log(a),a&&y((()=>{Y.series[0].data=a.data.ind,M.series[0].data=a.data.size,console.log("pieOptionsInd,",Y)}))}},ke=async e=>{W.currentRow=e,ve.value=!0,await(async e=>{const a=await O.post({url:"/categories/clone",data:e});return a&&a.data})(e).finally((()=>{ve.value=!1,$()}))},je=l(!1),_e=async()=>{var e;const a=p(ie);await(null==(e=null==a?void 0:a.elFormRef)?void 0:e.validate((async e=>{if(e){je.value=!0;const e=await(null==a?void 0:a.getFormData()),o=await(async e=>{console.log("saveGroupApi===data====",e);const a=await O.post({url:"/categories",data:e});return a&&a.data})(e).catch((()=>{})).finally((()=>{je.value=!1}));console.log("res=====",o),o&&(fe.value=!1,W.currentPage=1,$())}})))},Ce=()=>{var e,a;null==(a=null==(e=p(re))?void 0:e.getElFormRef())||a.validate((e=>{e?console.log("submit success"):console.log("submit fail")}))},Pe=e=>{W.params.userId=e?Z.value:null,$()};return(e,a)=>(s(),i(d,null,[r(p(w),null,{default:c((()=>[m("div",T,[r(p(_),{type:"primary",icon:p(oe),onClick:a[0]||(a[0]=e=>{return a="edit",ge.value=I("exampleDemo.add"),he.value=a,W.currentRow=null,void(fe.value=!0);var a})},null,8,["icon"]),r(p(_),{loading:ve.value,icon:p(le),type:"danger",onClick:a[1]||(a[1]=e=>ye(null,!0))},null,8,["loading","icon"]),r(p(F),{style:{"margin-left":"10px"},onChange:Pe},{default:c((()=>[f(g(p(I)("stock.onlymine")),1)])),_:1}),b(' ElButton type="warning" @click="dialogVisible2 = !dialogVisible2">{{\r\n        t(\'stock.setCalc\')\r\n      }}</ElButton ')]),r(p(k),{schema:p(me).searchSchema,onSearch:p(ee),onReset:p(ee)},null,8,["schema","onSearch","onReset"]),r(p(R),{pageSize:p(W).pageSize,"onUpdate:pageSize":a[2]||(a[2]=e=>p(W).pageSize=e),currentPage:p(W).currentPage,"onUpdate:currentPage":a[3]||(a[3]=e=>p(W).currentPage=e),columns:p(me).tableColumns,data:p(W).tableList,loading:p(W).loading,pagination:{total:p(W).total},onRegister:p(q)},{action:c((({row:e})=>[r(p(_),{icon:p(te),type:"success",onClick:a=>(e=>{let a="/stock/StockList"+e.id,o={id:e.id,userId:e.user_id},t={path:a,component:()=>h((()=>import("./StockList.d114ef74.js")),["assets/StockList.d114ef74.js","assets/ContentWrap.16a17a2c.js","assets/index.b1059dae.js","assets/index.7a894d9b.css","assets/el-card.1ec308ce.js","assets/el-card.62f62b18.css","assets/el-popper.bb59900e.js","assets/el-popper.2129afad.css","assets/index2.818f7ba6.js","assets/SearchButton.24a20768.js","assets/Form.8dc6e1de.js","assets/Form.80ce4d4c.css","assets/el-col.6fe24f7e.js","assets/el-col.9009e796.css","assets/typescript2.0e462989.js","assets/el-input.06003b15.js","assets/el-input.5a4ee1fb.css","assets/event2.1741f333.js","assets/index2.094f2439.js","assets/el-tag.0c1f86f6.js","assets/el-tag.c8ed32b1.css","assets/tsxHelper.965510a5.js","assets/tsxHelper.eec292c5.css","assets/index2.41c46d54.js","assets/scroll2.547c442b.js","assets/debounce.a82ef6ea.js","assets/validator2.e1318026.js","assets/el-button.fa3cf5bb.js","assets/el-button.31ff1471.css","assets/el-input-number.d6a5ff91.js","assets/el-input-number.fa2b2d4e.css","assets/el-switch.4afbc0fe.js","assets/el-switch.1190ebc1.css","assets/el-divider.cb2e339e.js","assets/el-divider.562ae4b3.css","assets/InputPassword.ff88492e.js","assets/InputPassword.2257c897.css","assets/plugin-vue_export-helper.21dcd24c.js","assets/Editor.049c780c.js","assets/Editor.2f70f506.css","assets/aria2.b5095a02.js","assets/browser2.b89d9fd3.js","assets/useForm.9c2aed63.js","assets/Dialog.83318e14.js","assets/Dialog.5402f204.css","assets/el-overlay.e2b68649.js","assets/el-overlay.56bab24d.css","assets/vnode2.fb06813d.js","assets/use-dialog2.df789107.js","assets/refs2.528ab877.js","assets/el-message-box.06586f35.js","assets/el-message-box.0d02745d.css","assets/Table.vue_vue_type_script_lang.7413d2fb.js","assets/Table.vue_vue_type_script_lang.de076dea.css","assets/useAxios.b7f2bb2e.js","assets/useTable.3b2e2107.js","assets/Write.114decdc.js","assets/useValidator.417be559.js","assets/Detail.bf7a810c.js","assets/Descriptions.2977bf96.js","assets/Descriptions.130712e1.css","assets/index2.d0413be8.js","assets/useCrudSchemas.4529f5d7.js","assets/tree.9e4d3f05.js","assets/useIcon.90fdf734.js"]),name:"stock_"+e.id,meta:{title:e.name,icon:"carbon:skill-level-advanced",breadcrumb:!0}};se.addRoute("Group",t),ae({path:a,query:o})})(e)},null,8,["icon","onClick"]),b(' ElButton\r\n          :disabled="userId != row.user_id"\r\n          type="primary"\r\n          :icon="edit"\r\n          @click="action(row, \'edit\')"\r\n        />\r\n        <ElButton :icon="clone" type="warning" @click="cloneGroup(row)" />\r\n        <ElButton\r\n          :disabled="userId != row.user_id"\r\n          type="danger"\r\n          :icon="del"\r\n          @click="delData(row, false)"\r\n        / '),r(p(C),{trigger:"click",style:{"margin-left":"5px"}},{dropdown:c((()=>[r(p(P),null,{default:c((()=>[r(p(x),{disabled:Z.value!=e.user_id,onClick:a=>we(e,"edit")},{default:c((()=>[f(g(p(I)("group.edit")),1)])),_:2},1032,["disabled","onClick"]),r(p(x),{onClick:a=>ke(e)},{default:c((()=>[f(g(p(I)("group.clone")),1)])),_:2},1032,["onClick"]),r(p(x),{onClick:a=>we(e,"analyze")},{default:c((()=>[f(g(p(I)("group.analyze")),1)])),_:2},1032,["onClick"]),r(p(x),{disabled:Z.value!=e.user_id,onClick:a=>ye(e,!1)},{default:c((()=>[f(g(p(I)("group.delete")),1)])),_:2},1032,["disabled","onClick"])])),_:2},1024)])),default:c((()=>[r(p(_),{icon:p(ne),type:"primary"},null,8,["icon"])])),_:2},1024)])),_:1},8,["pageSize","currentPage","columns","data","loading","pagination","onRegister"])])),_:1}),r(p(j),{modelValue:be.value,"onUpdate:modelValue":a[5]||(a[5]=e=>be.value=e),title:p(I)("stock.setCalc"),maxHeight:320},{footer:c((()=>[r(p(_),{type:"primary",onClick:Ce},{default:c((()=>[f(g(p(I)("dialogDemo.submit")),1)])),_:1}),r(p(_),{onClick:a[4]||(a[4]=e=>be.value=!1)},{default:c((()=>[f(g(p(I)("dialogDemo.close")),1)])),_:1})])),default:c((()=>[r(p(S),{ref_key:"formRef",ref:re,schema:de},null,8,["schema"])])),_:1},8,["modelValue","title"]),r(p(j),{modelValue:fe.value,"onUpdate:modelValue":a[7]||(a[7]=e=>fe.value=e),title:ge.value,width:"65%"},{footer:c((()=>["detail"!==he.value?(s(),v(p(_),{key:0,type:"primary",loading:je.value,onClick:_e},{default:c((()=>[f(g(p(I)("stock.save")),1)])),_:1},8,["loading"])):b("v-if",!0),r(p(_),{onClick:a[6]||(a[6]=e=>fe.value=!1)},{default:c((()=>[f(g(p(I)("stock.cancel")),1)])),_:1})])),default:c((()=>["edit"===he.value?(s(),v(D,{key:0,ref_key:"writeRef",ref:ie,"form-schema":p(me).formSchema,"current-row":p(W).currentRow},null,8,["form-schema","current-row"])):b("v-if",!0),"detail"===he.value?(s(),v(E,{key:1,"detail-schema":p(me).detailSchema,"current-row":p(W).currentRow},null,8,["detail-schema","current-row"])):b("v-if",!0),"analyze"===he.value?(s(),v(L,{key:2,pieOptionsInd:Y,pieOptionsSize:M},null,8,["pieOptionsInd","pieOptionsSize"])):b("v-if",!0)])),_:1},8,["modelValue","title"])],64))}});export{Y as default};
//# sourceMappingURL=data:application/json;base64,
