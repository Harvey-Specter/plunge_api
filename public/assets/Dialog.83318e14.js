import{d as e,ak as s,D as o,o as a,c as l,e as t,a2 as r,n,a as i,t as d,g as c,w as f,k as u,as as m,a0 as p,at as b,a4 as g,a8 as v,aa as y,c1 as h,aW as k,Y as x,r as C,ar as $,av as _,aQ as R,a5 as w,h as A,bO as I,ae as j,B as H,bX as E,v as F,E as M,a6 as L,a3 as z,X as D,ab as T,x as B}from"./index.b1059dae.js";import{u as O,a as q,E as S}from"./el-overlay.e2b68649.js";import{d as X,a as K,b as N,c as Q,u as U}from"./use-dialog2.df789107.js";import{u as V}from"./index2.41c46d54.js";import{F as W,e as Y}from"./el-popper.bb59900e.js";import{c as G}from"./refs2.528ab877.js";import{u as J}from"./el-button.fa3cf5bb.js";const P=Symbol("dialogInjectionKey"),Z=["aria-label"],ee=["id"];var se=y(e({name:"ElDialogContent",props:X,emits:K,setup(e){const y=e,{t:k}=V(),{Close:x}=h,{dialogRef:C,headerRef:$,bodyId:_,ns:R,style:w}=s(P),{focusTrapRef:A}=s(W),I=G(A,C),j=o((()=>y.draggable));return O(C,$,j),(e,s)=>(a(),l("div",{ref:i(I),class:n([i(R).b(),i(R).is("fullscreen",e.fullscreen),i(R).is("draggable",i(j)),{[i(R).m("center")]:e.center},e.customClass]),style:g(i(w)),tabindex:"-1",onClick:s[1]||(s[1]=v((()=>{}),["stop"]))},[t("header",{ref_key:"headerRef",ref:$,class:n(i(R).e("header"))},[r(e.$slots,"header",{},(()=>[t("span",{role:"heading",class:n(i(R).e("title"))},d(e.title),3)])),e.showClose?(a(),l("button",{key:0,"aria-label":i(k)("el.dialog.close"),class:n(i(R).e("headerbtn")),type:"button",onClick:s[0]||(s[0]=s=>e.$emit("close"))},[c(i(p),{class:n(i(R).e("close"))},{default:f((()=>[(a(),u(m(e.closeIcon||i(x))))])),_:1},8,["class"])],10,Z)):b("v-if",!0)],2),t("div",{id:i(_),class:n(i(R).e("body"))},[r(e.$slots,"default")],10,ee),e.$slots.footer?(a(),l("footer",{key:0,class:n(i(R).e("footer"))},[r(e.$slots,"footer")],2)):b("v-if",!0)],6))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog-content.vue"]]);const oe=["aria-label","aria-labelledby","aria-describedby"];const ae=j(y(e({name:"ElDialog",props:N,emits:Q,setup(e,{expose:s}){const l=e,d=k();J({scope:"el-dialog",from:"the title slot",replacement:"the header slot",version:"3.0.0",ref:"https://element-plus.org/en-US/component/dialog.html#slots"},o((()=>!!d.title)));const m=x("dialog"),p=C(),v=C(),y=C(),{visible:h,titleId:j,bodyId:H,style:E,rendered:F,zIndex:M,afterEnter:L,afterLeave:z,beforeLeave:D,handleClose:T,onModalClick:B,onOpenAutoFocus:O,onCloseAutoFocus:X,onCloseRequested:K}=U(l,p);$(P,{dialogRef:p,headerRef:v,bodyId:H,ns:m,rendered:F,style:E});const N=q(B),Q=o((()=>l.draggable&&!l.fullscreen));return s({visible:h,dialogContentRef:y}),(e,s)=>(a(),u(I,{to:"body",disabled:!e.appendToBody},[c(A,{name:"dialog-fade",onAfterEnter:i(L),onAfterLeave:i(z),onBeforeLeave:i(D),persisted:""},{default:f((()=>[_(c(i(S),{"custom-mask-event":"",mask:e.modal,"overlay-class":e.modalClass,"z-index":i(M)},{default:f((()=>[t("div",{role:"dialog","aria-modal":"true","aria-label":e.title||void 0,"aria-labelledby":e.title?void 0:i(j),"aria-describedby":i(H),class:n(`${i(m).namespace.value}-overlay-dialog`),onClick:s[0]||(s[0]=(...e)=>i(N).onClick&&i(N).onClick(...e)),onMousedown:s[1]||(s[1]=(...e)=>i(N).onMousedown&&i(N).onMousedown(...e)),onMouseup:s[2]||(s[2]=(...e)=>i(N).onMouseup&&i(N).onMouseup(...e))},[c(i(Y),{loop:"",trapped:i(h),"focus-start-el":"container",onFocusAfterTrapped:i(O),onFocusAfterReleased:i(X),onReleaseRequested:i(K)},{default:f((()=>[i(F)?(a(),u(se,{key:0,ref_key:"dialogContentRef",ref:y,"custom-class":e.customClass,center:e.center,"close-icon":e.closeIcon,draggable:i(Q),fullscreen:e.fullscreen,"show-close":e.showClose,style:g(i(E)),title:e.title,onClose:i(T)},w({header:f((()=>[e.$slots.title?r(e.$slots,"title",{key:1}):r(e.$slots,"header",{key:0,close:i(T),titleId:i(j),titleClass:i(m).e("title")})])),default:f((()=>[r(e.$slots,"default")])),_:2},[e.$slots.footer?{name:"footer",fn:f((()=>[r(e.$slots,"footer")]))}:void 0]),1032,["custom-class","center","close-icon","draggable","fullscreen","show-close","style","title","onClose"])):b("v-if",!0)])),_:3},8,["trapped","onFocusAfterTrapped","onFocusAfterReleased","onReleaseRequested"])],42,oe)])),_:3},8,["mask","overlay-class","z-index"]),[[R,i(h)]])])),_:3},8,["onAfterEnter","onAfterLeave","onBeforeLeave"])],8,["disabled"]))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog.vue"]]));const le={class:"flex justify-between"},te=e({__name:"Dialog",props:{modelValue:H.bool.def(!1),title:H.string.def("Dialog"),fullscreen:H.bool.def(!0),maxHeight:H.oneOfType([String,Number]).def("500px")},setup(e){const s=e,l=k(),n=o((()=>{const e=["fullscreen","title","maxHeight"],o={...D(),...s};for(const s in o)-1!==e.indexOf(s)&&delete o[s];return o})),m=C(!1),p=()=>{m.value=!i(m)},v=C(E(s.maxHeight)?`${s.maxHeight}px`:s.maxHeight);F((()=>m.value),(async e=>{if(await T(),e){const e=document.documentElement.offsetHeight;v.value=e-55-60-(l.footer?63:0)+"px"}else v.value=E(s.maxHeight)?`${s.maxHeight}px`:s.maxHeight}),{immediate:!0});const y=o((()=>({height:i(v)})));return(s,o)=>{const v=M("Icon");return a(),u(i(ae),L(i(n),{fullscreen:m.value,"destroy-on-close":"","lock-scroll":"",draggable:"","close-on-click-modal":!1}),w({header:f((()=>[t("div",le,[r(s.$slots,"title",{},(()=>[B(d(e.title),1)])),e.fullscreen?(a(),u(v,{key:0,class:"mr-18px cursor-pointer is-hover mt-2px",icon:m.value?"zmdi:fullscreen-exit":"zmdi:fullscreen",color:"var(--el-color-info)",onClick:p},null,8,["icon"])):b("v-if",!0)])])),default:f((()=>[c(i(z),{style:g(i(y))},{default:f((()=>[r(s.$slots,"default")])),_:3},8,["style"])])),_:2},[i(l).footer?{name:"footer",fn:f((()=>[r(s.$slots,"footer")]))}:void 0]),1040,["fullscreen"])}}});export{te as _};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
