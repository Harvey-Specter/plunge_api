import{_ as e}from"./ContentWrap.bd505729.js";import{_ as a}from"./SearchButton.592af312.js";import{_ as o}from"./Dialog.920e100e.js";import{d as t,ch as s,bQ as r,q as l,r as n,s as c,aF as i,o as d,c as p,g as u,w as m,a as f,G as g,l as w,e as h,k as y,at as b,x as v,t as k,bS as j}from"./index.701681eb.js";import{E as _}from"./el-button.c81d4f55.js";import{E as S}from"./el-tag.ddbbcdb2.js";import{E as C}from"./el-message-box.2a623809.js";import"./el-input.ed535820.js";import"./el-overlay.bdf8afb7.js";import{_ as P}from"./Table.vue_vue_type_script_lang.e2d83e06.js";import{u as x}from"./useAxios.51602908.js";import{u as R}from"./useTable.ed8be171.js";import I from"./Write.b0400490.js";import z from"./Detail.e8a17e11.js";import{u as F}from"./useCrudSchemas.9467c006.js";import{u as q}from"./useIcon.28eb236a.js";import"./el-card.2c75e3e6.js";import"./el-popper.e9e2fc16.js";import"./index2.01250fd4.js";import"./Form.358e2152.js";import"./el-col.33bc6b64.js";import"./typescript2.0e462989.js";import"./tsxHelper.39476c1a.js";import"./index2.bc62f99f.js";import"./event2.1741f333.js";import"./index2.411e8ed3.js";import"./scroll2.58f9a7d9.js";import"./debounce.96a7db81.js";import"./validator2.d2a80b6f.js";import"./el-input-number.b4d61595.js";import"./el-switch.8b8da31d.js";import"./el-divider.56b4f6b6.js";import"./InputPassword.2af2bf1d.js";import"./plugin-vue_export-helper.21dcd24c.js";import"./Editor.8d38f34f.js";import"./aria2.b5095a02.js";import"./browser2.c56688aa.js";import"./useForm.f9c4db1c.js";import"./use-dialog2.545d2e9f.js";import"./refs2.946bb193.js";import"./vnode2.31a80e3f.js";import"./useValidator.8da58eac.js";import"./Descriptions.70b93e1a.js";import"./index2.42d1d9cc.js";import"./tree.9e4d3f05.js";const B=x(),D=async e=>{const a=await B.get({url:"/categories/"+e.id+"/stocks",params:e});return a&&a.data},A=async e=>{const a=e.toString(),o=await B.post({url:"/stocks/del",data:{ids:a}});return o&&o.data},N={class:"mb-10px float-left"},L=t({__name:"StockList",setup(t){const x=s();console.log("route.query========",x.query);let L=x.query.id;const E=x.query.userId,U=x.query.del,T=x.query.from,G=x.query.indId,V=x.query.size;L||(L=-1);let W=0;U&&(W=1),console.log("delFlag----",W);const O=r(),{wsCache:H}=l(),M=H.get(O.getUserInfo).id;console.log(M,"========",E);let Q=!0;E==M&&(Q=!1);const{register:J,tableObject:K,methods:X}=R({getListApi:D,delListApi:A,response:{list:"list",total:"total"}}),{getList:Y,setSearchParams:Z}=X;K.params.id=L,K.params.del=W,K.params.userId=M,K.params.from=T,K.params.indId=G,K.params.size=V,Y();const{t:$}=w(),ee=q({icon:"ant-design:plus-outlined"}),ae=q({icon:"icon-park-outline:stock-market"}),oe=q({icon:"ep:delete"});let te=q({icon:"bx:edit"});1==W&&(te=q({icon:"fa-solid:undo"}));const se=n(""),re=n([]),le=n(["#99A9BF","#F7BA2A","#FF9900"]),ne=c([{field:"code",label:$("stock.code"),type:"count",search:{show:!0},form:{componentProps:{readonly:!0,onChange:async e=>{const a=await(async e=>{const a=await B.get({url:"/stocks/getStockByCode",params:{code:e}});return a&&a.data})(e).catch((()=>{})).finally((()=>{be.value=!1}));a&&(ce=a.data,a.data.length>0&&(K.currentRow.cate33=a.data[0].cate33,K.currentRow.name=a.data[0].name,K.currentRow.size=a.data[0].size,K.currentRow.code=a.data[0].code))}},colProps:{span:12}},detail:{show:!1}},{field:"name",label:$("stock.name"),search:{show:!0},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}},detail:{span:12}},{field:"cate33",label:$("stock.industry"),search:{show:!1},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}}},{field:"size",label:$("stock.size"),table:{show:!0},form:{show:!0,componentProps:{readonly:!0},colProps:{span:12}}},{field:"pattern",table:{show:"industry"!=T},search:{show:!1,component:"Select",componentProps:{readonly:!1,options:[{label:$("stock.headShoulder"),value:"1"},{label:$("stock.getingChips"),value:"2"},{label:$("stock.stars"),value:"3"},{label:$("stock.gap"),value:"4"},{label:$("stock.others"),value:"5"}]}},label:$("stock.pattern"),formatter:(e,a,o)=>i(S,{type:"1"===o?"success":"2"===o?"warning":"3"===o?"danger":"4"===o?"info":""},(()=>$("1"===o?"stock.headShoulder":"2"===o?"stock.getingChips":"3"===o?"stock.stars":"4"===o?"stock.gap":"stock.others"))),form:{colProps:{span:12},component:"Select",componentProps:{disabled:!1,options:[{label:$("stock.headShoulder"),value:"1"},{label:$("stock.getingChips"),value:"2"},{label:$("stock.stars"),value:"3"},{label:$("stock.gap"),value:"4"},{label:$("stock.others"),value:"5"}]}}},{field:"score",type:"count",label:$("stock.rate"),table:{show:"industry"!=T},formatter:(e,a,o)=>i(S,{type:0!==o&&o?1===o||2===o?"danger":3===o?"warning":4===o?"":"success":"info",effect:o?"dark":"light",round:!0},(()=>o)),form:{component:"Rate",componentProps:{readonly:Q,colors:le,size:"large"}}},{field:"created_at",label:$("stock.create_at"),table:{show:"industry"!=T},form:{show:!1}},{field:"category_ids",label:$("stock.save_as_block"),table:{show:!1},form:{colProps:{span:24},component:"CheckboxButton",value:[],componentProps:{options:[]}}},{field:"newCateName",label:$("stock.newGroup"),table:{show:!1},form:{show:!0,component:"Input",componentProps:{}}},{field:"cateName",label:$("stock.theGroup"),table:{show:1==W},form:{show:!1,component:"Input",componentProps:{}}},{field:"remark",label:$("group.remark"),table:{show:!1},form:{component:"Input",componentProps:{readonly:!1,type:"textarea",rows:10},colProps:{span:24}}},{field:"action",width:"260px",label:$("stock.action"),form:{show:!1},detail:{show:!1}}]);let ce=c([]);const ie=async()=>{const e=await(async e=>{const a=await B.get({url:"/categories/getCatesByUserId",params:{userId:e}});return a&&a.data})(M).catch((()=>{})).finally((()=>{be.value=!1}));if(e){ce=e.data;let a=[];for(let o=0;o<e.data.length;o++)a.push(e.data[o].value);re.value=a,ne.length>=8&&(ne[7].form.componentProps.options=ce)}};ie();const de=n([]),pe=async(e,a)=>{const o=await(async(e,a)=>{const o=await B.get({url:"/categories/getCatesByUserIdCode",params:{userId:e,code:a}});return o&&o.data})(e,a).catch((()=>{})).finally((()=>{be.value=!1}));if(o){ce=o.data;let e=[];for(let a=0;a<o.data.length;a++)e.push(o.data[a].value);de.value=e,K.currentRow.category_ids=de.value}},{allSchemas:ue}=F(ne),me=n(!1),fe=n(""),ge=n(!1),we=async(e,a,o)=>{var t;K.currentRow=e;const{delList:s,getSelections:r}=X,l=await r();a&&0==l.length||(ge.value=!0,1==o?C.confirm($("common.delMessage"),$("common.delWarning"),{confirmButtonText:$("common.delOk"),cancelButtonText:$("common.delCancel"),type:"warning"}).then((async()=>{var e;await(async e=>{const a=e.toString(),o=await B.post({url:"/stocks/rmf",data:{ids:a}});return o&&o.data})(a?l.map((e=>e.id)):[null==(e=K.currentRow)?void 0:e.id]).finally((()=>{ge.value=!1,Y()}))})):await s(a?l.map((e=>e.id)):[null==(t=K.currentRow)?void 0:t.id],a).finally((()=>{ge.value=!1,Y()})))},he=async(e,a)=>{var o;console.log("recData=========="),K.currentRow=e;const{getSelections:t}=X,s=await t();a&&0==s.length||(ge.value=!0,await(async e=>{const a=e.toString(),o=await B.post({url:"/stocks/rec",data:{ids:a}});return o&&o.data})(a?s.map((e=>e.id)):[null==(o=K.currentRow)?void 0:o.id]).finally((()=>{ge.value=!1,Y()})))},ye=n(),be=n(!1),ve=async()=>{var e;const a=f(ye);await(null==(e=null==a?void 0:a.elFormRef)?void 0:e.validate((async e=>{if(e){const e=await(null==a?void 0:a.getFormData());if(e.user_id=M,0==e.category_ids.length&&""==e.newCateName)return j.warning($("stock.msgGroupNull")),!1;e.category_id||(e.category_id=-1),console.log("stockSave====",e);const o=await(async e=>{const a=await B.post({url:"/stocks/saveStock",data:e});return a&&a.data})(e).catch((()=>{})).finally((()=>{be.value=!1}));o&&(me.value=!1,K.currentPage=1,Y())}})))};return(t,s)=>(d(),p(g,null,[u(f(e),null,{default:m((()=>[h("div",N,[1!=f(W)?(d(),y(f(_),{key:0,disabled:f(Q)||1==f(W),icon:f(ee),type:"primary",onClick:s[0]||(s[0]=e=>(ne.length>=1&&(ne[0].form.componentProps.readonly=!1),fe.value=$("exampleDemo.add"),se.value="edit",K.currentRow={id:NaN,name:"",cate33:"",code:"",user_id:M,category_id:+L,pattern:"",market:"",remark:"",created_at:"",category_ids:[+L],score:0,size:"",cateName:"",newCateName:""},void(me.value=!0)))},null,8,["disabled","icon"])):b("v-if",!0),1==f(W)?(d(),y(f(_),{key:1,icon:f(te),type:"primary",onClick:s[1]||(s[1]=e=>he(null,!0))},null,8,["icon"])):b("v-if",!0),u(f(_),{disabled:f(Q)&&0==f(W),icon:f(oe),loading:ge.value,type:"danger",onClick:s[2]||(s[2]=e=>we(null,!0,f(W)))},null,8,["disabled","icon","loading"])]),u(f(a),{schema:f(ue).searchSchema,onSearch:f(Z),onReset:f(Z)},null,8,["schema","onSearch","onReset"]),u(f(P),{pageSize:f(K).pageSize,"onUpdate:pageSize":s[3]||(s[3]=e=>f(K).pageSize=e),currentPage:f(K).currentPage,"onUpdate:currentPage":s[4]||(s[4]=e=>f(K).currentPage=e),columns:f(ue).tableColumns,data:f(K).tableList,loading:f(K).loading,pagination:{total:f(K).total},onRegister:f(J)},{action:m((({row:e})=>[u(f(_),{icon:f(ae),type:"success",onClick:a=>(e=>{window.open("https://www.tradingview.com/chart/CFSEAW1L/?symbol=TSE%3A"+e.code,"_blank")})(e)},null,8,["icon","onClick"]),u(f(_),{icon:f(te),type:"primary",onClick:a=>(async(e,a)=>{console.log("action_delflag====",W),1==W?(console.log("now is in trash ; Do recover"),await he(e,!1),Y()):(ie(),fe.value=$("edit"===a?"exampleDemo.edit":"exampleDemo.detail"),se.value=a,ne.length>=1&&(ne[0].form.componentProps.readonly=!0),K.currentRow=e,pe(M,e.code),me.value=!0)})(e,"edit")},null,8,["icon","onClick"]),u(f(_),{disabled:f(Q)&&0==f(W),icon:f(oe),type:"danger",onClick:a=>we(e,!1,f(W))},null,8,["disabled","icon","onClick"])])),_:1},8,["pageSize","currentPage","columns","data","loading","pagination","onRegister"])])),_:1}),u(f(o),{modelValue:me.value,"onUpdate:modelValue":s[6]||(s[6]=e=>me.value=e),title:fe.value},{footer:m((()=>["detail"!==se.value?(d(),y(f(_),{key:0,type:"primary",loading:be.value,onClick:ve},{default:m((()=>[v(k(f($)("stock.save")),1)])),_:1},8,["loading"])):b("v-if",!0),u(f(_),{onClick:s[5]||(s[5]=e=>me.value=!1)},{default:m((()=>[v(k(f($)("stock.cancel")),1)])),_:1})])),default:m((()=>["edit"===se.value?(d(),y(I,{key:0,ref_key:"writeRef",ref:ye,"form-schema":f(ue).formSchema,"current-row":f(K).currentRow},null,8,["form-schema","current-row"])):b("v-if",!0),"detail"===se.value?(d(),y(z,{key:1,"detail-schema":f(ue).detailSchema,"current-row":f(K).currentRow},null,8,["detail-schema","current-row"])):b("v-if",!0)])),_:1},8,["modelValue","title"])],64))}});export{L as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
