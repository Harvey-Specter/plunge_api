import{_ as t}from"./ContentWrap.16a17a2c.js";import{Q as e,R as a,az as n,aA as o,d as l,Y as s,aR as p,cs as i,ct as r,r as u,D as m,v as f,$ as x,ad as g,bf as d,aT as v,o as c,c as y,e as C,a2 as b,n as h,a as k,a4 as _,aa as $,ae as j,l as S,k as w,w as T,g as A}from"./index.b1059dae.js";import{_ as z}from"./Sticky.0700ebca.js";import{C as E}from"./event2.1741f333.js";import{a as I}from"./scroll2.547c442b.js";import"./el-card.1ec308ce.js";import"./el-popper.bb59900e.js";import"./index2.818f7ba6.js";const D=j($(l({name:"ElAffix",props:e({zIndex:{type:a([Number,String]),default:100},target:{type:String,default:""},offset:{type:Number,default:0},position:{type:String,values:["top","bottom"],default:"top"}}),emits:{scroll:({scrollTop:t,fixed:e})=>n(t)&&o(e),[E]:t=>o(t)},setup(t,{expose:e,emit:a}){const n=t,o=s("affix"),l=p(),$=p(),j=p(),{height:S}=i(),{height:w,width:T,top:A,bottom:z,update:E}=r($),D=r(l),N=u(!1),R=u(0),W=u(0),Y=m((()=>({height:N.value?`${w.value}px`:"",width:N.value?`${T.value}px`:""}))),q=m((()=>{if(!N.value)return{};const t=n.offset?`${n.offset}px`:0;return{height:`${w.value}px`,width:`${T.value}px`,top:"top"===n.position?t:"",bottom:"bottom"===n.position?t:"",transform:W.value?`translateY(${W.value}px)`:"",zIndex:n.zIndex}})),Q=()=>{if(j.value)if(R.value=j.value instanceof Window?document.documentElement.scrollTop:j.value.scrollTop||0,"top"===n.position)if(n.target){const t=D.bottom.value-n.offset-w.value;N.value=n.offset>A.value&&D.bottom.value>0,W.value=t<0?t:0}else N.value=n.offset>A.value;else if(n.target){const t=S.value-D.top.value-n.offset-w.value;N.value=S.value-n.offset<z.value&&S.value>D.top.value,W.value=t<0?-t:0}else N.value=S.value-n.offset<z.value};return f(N,(t=>a("change",t))),x((()=>{var t;n.target?(l.value=null!=(t=document.querySelector(n.target))?t:void 0,l.value||g("ElAffix",`Target is not existed: ${n.target}`)):l.value=document.documentElement,j.value=I($.value,!0),E()})),d(j,"scroll",(()=>{a("scroll",{scrollTop:R.value,fixed:N.value})})),v(Q),e({update:Q}),(t,e)=>(c(),y("div",{ref_key:"root",ref:$,class:h(k(o).b()),style:_(k(Y))},[C("div",{class:h({[k(o).m("fixed")]:N.value}),style:_(k(q))},[b(t.$slots,"default")],6)],6))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/affix/src/affix.vue"]]));const N=C("div",{style:{padding:"10px","background-color":"lightblue"}}," Sticky 距离顶部90px ",-1),R=C("p",{style:{margin:"80px"}},"Content",-1),W=C("p",{style:{margin:"80px"}},"Content",-1),Y=C("div",{style:{padding:"10px","background-color":"lightblue"}},"Affix 距离顶部150px ",-1),q=C("p",{style:{margin:"80px"}},"Content",-1),Q=C("p",{style:{margin:"80px"}},"Content",-1),B=C("p",{style:{margin:"80px"}},"Content",-1),F=C("p",{style:{margin:"80px"}},"Content",-1),G=C("p",{style:{margin:"80px"}},"Content",-1),H=C("p",{style:{margin:"80px"}},"Content",-1),J=C("p",{style:{margin:"80px"}},"Content",-1),K=C("p",{style:{margin:"80px"}},"Content",-1),L=C("p",{style:{margin:"80px"}},"Content",-1),M=C("p",{style:{margin:"80px"}},"Content",-1),O=C("p",{style:{margin:"80px"}},"Content",-1),P=C("p",{style:{margin:"80px"}},"Content",-1),U=C("p",{style:{margin:"80px"}},"Content",-1),V=C("p",{style:{margin:"80px"}},"Content",-1),X=C("p",{style:{margin:"80px"}},"Content",-1),Z=C("p",{style:{margin:"80px"}},"Content",-1),tt=C("p",{style:{margin:"80px"}},"Content",-1),et=C("p",{style:{margin:"80px"}},"Content",-1),at=C("p",{style:{margin:"80px"}},"Content",-1),nt=C("p",{style:{margin:"80px"}},"Content",-1),ot=C("p",{style:{margin:"80px"}},"Content",-1),lt=C("p",{style:{margin:"80px"}},"Content",-1),st=C("p",{style:{margin:"80px"}},"Content",-1),pt=C("p",{style:{margin:"80px"}},"Content",-1),it=C("p",{style:{margin:"80px"}},"Content",-1),rt=C("p",{style:{margin:"80px"}},"Content",-1),ut=C("div",{style:{padding:"10px","background-color":"lightblue"}},"Affix 距离底部150px ",-1),mt=C("p",{style:{margin:"80px"}},"Content",-1),ft=C("p",{style:{margin:"80px"}},"Content",-1),xt=C("div",{style:{padding:"10px","background-color":"lightblue"}}," Sticky 距离底部90px ",-1),gt=C("p",{style:{margin:"80px"}},"Content",-1),dt=C("p",{style:{margin:"80px"}},"Content",-1),vt=l({__name:"Sticky",setup(e){const{t:a}=S();return(e,n)=>(c(),w(k(t),{title:k(a)("stickyDemo.sticky")},{default:T((()=>[A(k(z),{offset:90},{default:T((()=>[N])),_:1}),R,W,A(k(D),{offset:150},{default:T((()=>[Y])),_:1}),q,Q,B,F,G,H,J,K,L,M,O,P,U,V,X,Z,tt,et,at,nt,ot,lt,st,pt,it,rt,A(k(D),{offset:150,position:"bottom"},{default:T((()=>[ut])),_:1}),mt,ft,A(k(z),{offset:90,position:"bottom"},{default:T((()=>[xt])),_:1}),gt,dt])),_:1},8,["title"]))}});export{vt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
