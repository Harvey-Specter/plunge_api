import{Q as e,b6 as o,R as l,aA as a,bN as t,r as n,D as s,az as u,bl as c,cc as d,v as r,ab as p,$ as f,aI as i,cd as y,P as v}from"./index.701681eb.js";import{U as m}from"./event2.1741f333.js";import{u as b}from"./index2.01250fd4.js";import{b as C}from"./el-overlay.bdf8afb7.js";const B=e({center:{type:Boolean,default:!1},closeIcon:{type:o,default:""},customClass:{type:String,default:""},draggable:{type:Boolean,default:!1},fullscreen:{type:Boolean,default:!1},showClose:{type:Boolean,default:!0},title:{type:String,default:""}}),x={close:()=>!0},g=e({...B,appendToBody:{type:Boolean,default:!1},beforeClose:{type:l(Function)},destroyOnClose:{type:Boolean,default:!1},closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},lockScroll:{type:Boolean,default:!0},modal:{type:Boolean,default:!0},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:0},top:{type:String},modelValue:{type:Boolean,required:!0},modalClass:String,width:{type:[String,Number]},zIndex:{type:Number},trapFocus:{type:Boolean,default:!1}}),D={open:()=>!0,opened:()=>!0,close:()=>!0,closed:()=>!0,[m]:e=>a(e),openAutoFocus:()=>!0,closeAutoFocus:()=>!0},I=(e,o)=>{const l=i().emit,{nextZIndex:a}=t();let B="";const x=b(),g=b(),D=n(!1),I=n(!1),h=n(!1),F=n(e.zIndex||a());let w,A;const O=s((()=>u(e.width)?`${e.width}px`:e.width)),S=c("namespace",d),k=s((()=>{const o={},l=`--${S.value}-dialog`;return e.fullscreen||(e.top&&(o[`${l}-margin-top`]=e.top),e.width&&(o[`${l}-width`]=O.value)),o}));function z(){null==A||A(),null==w||w(),e.openDelay&&e.openDelay>0?({stop:w}=y((()=>j()),e.openDelay)):j()}function N(){null==w||w(),null==A||A(),e.closeDelay&&e.closeDelay>0?({stop:A}=y((()=>E()),e.closeDelay)):E()}function $(){e.beforeClose?e.beforeClose((function(e){e||(I.value=!0,D.value=!1)})):N()}function j(){v&&(D.value=!0)}function E(){D.value=!1}return e.lockScroll&&C(D),r((()=>e.modelValue),(t=>{t?(I.value=!1,z(),h.value=!0,l("open"),F.value=e.zIndex?F.value++:a(),p((()=>{o.value&&(o.value.scrollTop=0)}))):D.value&&N()})),r((()=>e.fullscreen),(e=>{o.value&&(e?(B=o.value.style.transform,o.value.style.transform=""):o.value.style.transform=B)})),f((()=>{e.modelValue&&(D.value=!0,h.value=!0,z())})),{afterEnter:function(){l("opened")},afterLeave:function(){l("closed"),l(m,!1),e.destroyOnClose&&(h.value=!1)},beforeLeave:function(){l("close")},handleClose:$,onModalClick:function(){e.closeOnClickModal&&$()},close:N,doClose:E,onOpenAutoFocus:function(){l("openAutoFocus")},onCloseAutoFocus:function(){l("closeAutoFocus")},onCloseRequested:function(){e.closeOnPressEscape&&$()},titleId:x,bodyId:g,closed:I,style:k,rendered:h,visible:D,zIndex:F}};export{x as a,g as b,D as c,B as d,I as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
